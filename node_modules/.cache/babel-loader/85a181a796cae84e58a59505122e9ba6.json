{"ast":null,"code":"import \"antd-mobile/lib/badge/style/css\";\nimport _Badge from \"antd-mobile/lib/badge\";\nimport \"antd-mobile/lib/list/style/css\";\nimport _List from \"antd-mobile/lib/list\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/Users/loki/feature1/Handy-Booking-Management-System/src/component/msg/msg.js\";\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nlet Msg = (_dec = connect(state => state), _dec(_class = class Msg extends React.PureComponent {\n  getLast(arr) {\n    //获取最后一条聊天信息\n    return arr[arr.length - 1];\n  }\n\n  render() {\n    // console.log(\"msg--->props\",this.props);\n    if (!this.props.chat.chatmsg.length) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 20\n        }\n      }, \"\\u6682\\u65E0\\u6570\\u636E\");\n    }\n\n    const Item = _List.Item;\n    const Brief = Item.Brief; //当前登录用户的id\n\n    const userid = this.props.user._id; //所有用户的列表\n\n    const userinfo = this.props.chat.users;\n    const msgGroup = [];\n    this.props.chat.chatmsg.forEach(v => {\n      msgGroup[v.chatid] = msgGroup[v.chatid] || [];\n      msgGroup[v.chatid].push(v);\n    });\n    const chatList = Object.values(msgGroup).sort((a, b) => {\n      const a_last = this.getLast(a).create_time;\n      const b_last = this.getLast(b).create_time;\n      return b_last - a_last;\n    });\n    console.log(\"msg-->chatList\", chatList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, chatList.map(v => {\n      const lastItem = this.getLast(v);\n      console.log(\"msg-->v\", v); //获取聊天的对象\n\n      const targetId = lastItem.from === userid ? lastItem.to : lastItem.from;\n      const unreadNum = v.filter(v => !v.read && v.to === userid).length;\n      console.log(\"msg-->targetId\", targetId);\n      return /*#__PURE__*/React.createElement(_List, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Item, {\n        arrow: \"horizontal\",\n        extra: /*#__PURE__*/React.createElement(_Badge, {\n          text: unreadNum,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 40\n          }\n        }),\n        onClick: () => {\n          //跳转到聊天的页面\n          this.props.history.push(`/chat/${targetId}`);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }\n      }, lastItem.content, /*#__PURE__*/React.createElement(Brief, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, userinfo[targetId].name)));\n    }));\n  }\n\n}) || _class);\nexport default Msg;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/component/msg/msg.js"],"names":["React","connect","Msg","state","PureComponent","getLast","arr","length","render","props","chat","chatmsg","Item","Brief","userid","user","_id","userinfo","users","msgGroup","forEach","v","chatid","push","chatList","Object","values","sort","a","b","a_last","create_time","b_last","console","log","map","lastItem","targetId","from","to","unreadNum","filter","read","history","content","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {List,Badge} from 'antd-mobile'\n\n@connect(\n    state => state\n)\nclass Msg extends React.PureComponent{\n    getLast(arr){\n        //获取最后一条聊天信息\n        return arr[arr.length-1]\n    }\n    render(){\n        // console.log(\"msg--->props\",this.props);\n        if(!this.props.chat.chatmsg.length){\n            return <div>暂无数据</div>\n        }\n        const Item = List.Item\n        const Brief = Item.Brief\n        //当前登录用户的id\n        const userid = this.props.user._id\n        //所有用户的列表\n        const userinfo = this.props.chat.users\n        const msgGroup = []\n        this.props.chat.chatmsg.forEach(v => {\n            msgGroup[v.chatid] = msgGroup[v.chatid] || []\n            msgGroup[v.chatid].push(v)\n        });\n        const chatList = Object.values(msgGroup).sort((a,b)=>{\n            const a_last = this.getLast(a).create_time\n            const b_last = this.getLast(b).create_time\n            return b_last-a_last\n        }) \n        console.log(\"msg-->chatList\",chatList);\n        \n        \n        return(\n            <div>\n                {chatList.map(v=>{\n                    const lastItem = this.getLast(v)\n                    console.log(\"msg-->v\",v);\n                    \n                    //获取聊天的对象\n                    const targetId = lastItem.from===userid?lastItem.to:lastItem.from\n                    const unreadNum = v.filter(v=>!v.read&&v.to===userid).length\n                    console.log(\"msg-->targetId\",targetId);\n                \n                    return(\n                        <List>\n                            <Item\n                                arrow=\"horizontal\"\n                                extra={<Badge text={unreadNum}></Badge>}\n                                onClick={()=>{\n                                    //跳转到聊天的页面\n                                    this.props.history.push(`/chat/${targetId}`)\n                                }}\n                            >\n                                {lastItem.content}\n                                <Brief>{userinfo[targetId].name}</Brief>\n                            </Item>\n                        </List>\n                    )\n                })}\n            </div>\n        )\n    }\n}\nexport default Msg"]},"metadata":{},"sourceType":"module"}