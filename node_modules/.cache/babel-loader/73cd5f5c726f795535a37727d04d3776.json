{"ast":null,"code":"var _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Entry/FormDemo/FormDemo1.js\";\n\nimport React from 'react';\nimport { Card, Cascader, Tooltip, Icon, Form, Checkbox, Select, Input, Button, Col, Row, message, BackTop } from 'antd';\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index';\nimport TypingCard from '../../../components/TypingCard';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst options = [{\n  label: '湖北',\n  value: 'hubei',\n  children: [{\n    label: '武汉',\n    value: 'wuhang',\n    children: [{\n      label: '蔡甸区',\n      value: 'caidian'\n    }, {\n      label: '江夏',\n      value: 'jiangxia'\n    }]\n  }, {\n    label: '宜昌',\n    value: 'yichang',\n    children: [{\n      label: '伍家岗',\n      value: 'wujiagang'\n    }, {\n      label: '夷陵区',\n      value: 'yilingqu'\n    }, {\n      label: '江南',\n      value: 'jiangnan'\n    }, {\n      label: '开发区',\n      value: 'kaifaqu'\n    }, {\n      label: 'CBD',\n      value: 'CBD'\n    }]\n  }]\n}];\nlet FormDemo1 = (_dec = Form.create(), _dec(_class = (_temp = class FormDemo1 extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: '获取验证码',\n      disabled: false\n    };\n    this.timer = 0;\n\n    this.countdown = e => {\n      let time = 60;\n      this.setState({\n        text: --time + 's',\n        disabled: true\n      });\n      this.timer = setInterval(() => {\n        if (time > 0) {\n          this.setState({\n            text: --time + 's',\n            disabled: true\n          });\n        } else {\n          this.setState({\n            text: '获取验证码',\n            disabled: false\n          });\n        }\n      }, 1000);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll((err, values) => {\n        if (err) {\n          message.warning('请先填写正确的表单');\n        } else {\n          message.success('提交成功'); // console.log(values)\n        }\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldValue\n    } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 12\n        }\n      }\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 12,\n          offset: 4\n        }\n      }\n    };\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: 86\n    })( /*#__PURE__*/React.createElement(Select, {\n      style: {\n        width: 70\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Option, {\n      value: 86,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"+86\"), /*#__PURE__*/React.createElement(Option, {\n      value: 87,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, \"+87\")));\n    const cardContent = '表单页用于向用户收集或验证信息，基础表单常见于数据项较少的表单场景';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomBreadcrumb, {\n      arr: ['输入', '表单', '基础表单'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TypingCard, {\n      source: cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Card, {\n      bordered: false,\n      title: \"\\u57FA\\u7840\\u8868\\u5355\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      layout: \"horizontal\",\n      style: {\n        width: '70%',\n        margin: '0 auto'\n      },\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u90AE\\u7BB1\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: '请输入正确的邮箱地址'\n      }, {\n        required: true,\n        message: '请填写邮箱地址'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5BC6\\u7801\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码'\n      }, {\n        min: 6,\n        message: '密码至少为6个字符'\n      }, {\n        max: 16,\n        message: '密码最多为16个字符'\n      }, {\n        whitespace: true,\n        message: '密码中不能有空格'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u786E\\u8BA4\\u5BC6\\u7801\"\n    }, formItemLayout, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('confirm', {\n      rules: [{\n        validator: (rule, value, callback) => {\n          const {\n            getFieldValue\n          } = this.props.form;\n\n          if (!getFieldValue('password')) {\n            callback('请先输入上面的密码！');\n          }\n\n          if (value && value !== getFieldValue('password')) {\n            callback('两次输入不一致！');\n          }\n\n          callback();\n        }\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      type: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, formItemLayout, {\n      label: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }\n      }, \"\\u6635\\u79F0\\xA0\", /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"\\u8BF7\\u8F93\\u5165\\u60A8\\u7684\\u6635\\u79F0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('nickname', {\n      rules: []\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u5C45\\u4F4F\\u5730\"\n    }, formItemLayout, {\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('residence', {\n      rules: [{\n        type: 'array',\n        required: true,\n        message: '请选择居住地'\n      }]\n    })( /*#__PURE__*/React.createElement(Cascader, {\n      options: options,\n      expandTrigger: \"hover\",\n      placeholder: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u7535\\u8BDD\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('phone', {\n      rules: [{\n        len: 11,\n        pattern: /^[1][3,4,5,7,8][0-9]{9}$/,\n        required: true,\n        message: '请输入正确的11位手机号码'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      addonBefore: prefixSelector,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      label: \"\\u4E2A\\u4EBA\\u7AD9\\u70B9\"\n    }, formItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('website', {\n      rules: [{\n        pattern: /^([hH][tT]{2}[pP]:\\/\\/|[hH][tT]{2}[pP][sS]:\\/\\/)(([A-Za-z0-9-~]+)\\.)+([A-Za-z0-9-~/])+$/,\n        message: '请输入正确的站点地址'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, formItemLayout, {\n      label: \"\\u9A8C\\u8BC1\\u7801\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      gutter: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, getFieldDecorator('captcha', {\n      rules: [{\n        required: true,\n        message: '请输入验证码！'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      disabled: this.state.disabled,\n      onClick: e => this.countdown(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, this.state.text)))), /*#__PURE__*/React.createElement(FormItem, Object.assign({}, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }), getFieldDecorator('agreement', {\n      valuePropName: 'checked'\n    })( /*#__PURE__*/React.createElement(Checkbox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, \"\\u6211\\u5DF2\\u9605\\u8BFB\\u5E76\\u540C\\u610F\", /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 34\n      }\n    }, \"\\u534F\\u8BAE\")))), /*#__PURE__*/React.createElement(FormItem, Object.assign({\n      style: {\n        textAlign: 'center'\n      }\n    }, tailFormItemLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      disabled: !getFieldValue('agreement'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 15\n      }\n    }, \"\\u63D0\\u4EA4\")))), /*#__PURE__*/React.createElement(BackTop, {\n      visibilityHeight: 200,\n      style: {\n        right: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}, _temp)) || _class);\nexport default FormDemo1;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Entry/FormDemo/FormDemo1.js"],"names":["React","Card","Cascader","Tooltip","Icon","Form","Checkbox","Select","Input","Button","Col","Row","message","BackTop","CustomBreadcrumb","TypingCard","FormItem","Item","Option","options","label","value","children","FormDemo1","create","Component","state","text","disabled","timer","countdown","e","time","setState","setInterval","handleSubmit","preventDefault","props","form","validateFieldsAndScroll","err","values","warning","success","componentWillUnmount","clearInterval","render","getFieldDecorator","getFieldValue","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","prefixSelector","initialValue","width","cardContent","margin","rules","type","required","min","max","whitespace","validator","rule","callback","len","pattern","valuePropName","textAlign","right"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Card, Cascader, Tooltip, Icon, Form, Checkbox, Select, Input, Button, Col, Row, message, BackTop} from 'antd'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index'\nimport TypingCard from '../../../components/TypingCard'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\n\nconst options = [\n  {\n    label: '湖北',\n    value: 'hubei',\n    children: [\n      {\n        label: '武汉',\n        value: 'wuhang',\n        children: [\n          {\n            label: '蔡甸区',\n            value: 'caidian'\n          },\n          {\n            label: '江夏',\n            value: 'jiangxia'\n          }\n        ]\n      },\n      {\n        label: '宜昌',\n        value: 'yichang',\n        children: [\n          {\n            label: '伍家岗',\n            value: 'wujiagang'\n          },\n          {\n            label: '夷陵区',\n            value: 'yilingqu'\n          },\n          {\n            label: '江南',\n            value: 'jiangnan'\n          },\n          {\n            label: '开发区',\n            value: 'kaifaqu'\n          },\n          {\n            label: 'CBD',\n            value: 'CBD'\n          }\n        ]\n      }\n    ]\n  }\n]\n\n@Form.create()\nclass FormDemo1 extends React.Component {\n  state = {\n    text: '获取验证码',\n    disabled: false,\n\n  }\n  timer = 0\n  countdown = (e) => {\n    let time = 60\n    this.setState({\n      text: --time + 's',\n      disabled: true\n    })\n    this.timer = setInterval(() => {\n      if (time > 0) {\n        this.setState({\n          text: --time + 's',\n          disabled: true\n        })\n      } else {\n        this.setState({\n          text: '获取验证码',\n          disabled: false\n        })\n      }\n    }, 1000)\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (err) {\n        message.warning('请先填写正确的表单')\n      } else {\n        message.success('提交成功')\n        // console.log(values)\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    const {getFieldDecorator, getFieldValue} = this.props.form\n    const formItemLayout = {\n      labelCol: {\n        xs: {span: 24},\n        sm: {span: 4},\n      },\n      wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 12},\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 12,\n          offset: 4,\n        },\n      },\n    }\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: 86,\n    })(\n      <Select style={{width: 70}}>\n        <Option value={86}>+86</Option>\n        <Option value={87}>+87</Option>\n      </Select>\n    );\n    const cardContent = '表单页用于向用户收集或验证信息，基础表单常见于数据项较少的表单场景'\n    return (\n      <div>\n        <CustomBreadcrumb arr={['输入', '表单', '基础表单']}/>\n        <TypingCard source={cardContent}/>\n        <Card bordered={false} title='基础表单'>\n          <Form layout='horizontal' style={{width: '70%', margin: '0 auto'}} onSubmit={this.handleSubmit}>\n            <FormItem label='邮箱' {...formItemLayout}>\n              {\n                getFieldDecorator('email', {\n                  rules: [\n                    {\n                      type: 'email',\n                      message: '请输入正确的邮箱地址'\n                    },\n                    {\n                      required: true,\n                      message: '请填写邮箱地址'\n                    }\n                  ]\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem label='密码' {...formItemLayout}>\n              {\n                getFieldDecorator('password', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入密码'\n                    },\n                    {\n                      min: 6,\n                      message: '密码至少为6个字符'\n                    },\n                    {\n                      max: 16,\n                      message: '密码最多为16个字符'\n                    },\n                    {\n                      whitespace: true,\n                      message: '密码中不能有空格'\n                    }\n                  ]\n                })(\n                  <Input type='password'/>\n                )\n              }\n            </FormItem>\n            <FormItem label='确认密码' {...formItemLayout} required>\n              {\n                getFieldDecorator('confirm', {\n                  rules: [\n                    {\n                      validator: (rule, value, callback) => {\n                        const {getFieldValue} = this.props.form\n                        if (!getFieldValue('password')) {\n                          callback('请先输入上面的密码！')\n                        }\n                        if (value && value !== getFieldValue('password')) {\n                          callback('两次输入不一致！')\n                        }\n                        callback()\n                      }\n                    }\n                  ]\n                })(\n                  <Input type='password'/>\n                )\n              }\n            </FormItem>\n            <FormItem {...formItemLayout} label={(\n              <span>\n                昵称&nbsp;\n                <Tooltip title='请输入您的昵称'>\n                  <Icon type='question-circle-o'/>\n                </Tooltip>\n              </span>\n            )}>\n              {\n                getFieldDecorator('nickname', {\n                  rules: []\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem label='居住地' {...formItemLayout} required>\n              {\n                getFieldDecorator('residence', {\n                  rules: [\n                    {\n                      type: 'array',\n                      required: true,\n                      message: '请选择居住地'\n                    }\n                  ]\n                })(\n                  <Cascader options={options} expandTrigger=\"hover\" placeholder=''/>\n                )\n              }\n            </FormItem>\n            <FormItem label='电话' {...formItemLayout}>\n              {\n                getFieldDecorator('phone', {\n                  rules: [\n                    {\n                      len: 11,\n                      pattern: /^[1][3,4,5,7,8][0-9]{9}$/,\n                      required: true,\n                      message: '请输入正确的11位手机号码'\n                    }\n                  ]\n                })(\n                  <Input addonBefore={prefixSelector}/>\n                )\n              }\n            </FormItem>\n            <FormItem label='个人站点' {...formItemLayout}>\n              {\n                getFieldDecorator('website', {\n                  rules: [\n                    {\n                      pattern: /^([hH][tT]{2}[pP]:\\/\\/|[hH][tT]{2}[pP][sS]:\\/\\/)(([A-Za-z0-9-~]+)\\.)+([A-Za-z0-9-~/])+$/,\n                      message: '请输入正确的站点地址'\n                    }\n                  ]\n                })(\n                  <Input/>\n                )\n              }\n            </FormItem>\n            <FormItem{...formItemLayout} label=\"验证码\">\n              <Row gutter={8}>\n                <Col span={12}>\n                  {getFieldDecorator('captcha', {\n                    rules: [{required: true, message: '请输入验证码！'}],\n                  })(\n                    <Input/>\n                  )}\n                </Col>\n                <Col span={12}>\n                  <Button disabled={this.state.disabled} onClick={(e) => this.countdown(e)}>{this.state.text}</Button>\n                </Col>\n              </Row>\n            </FormItem>\n            <FormItem {...tailFormItemLayout}>\n              {getFieldDecorator('agreement', {\n                valuePropName: 'checked',\n              })(\n                <Checkbox>我已阅读并同意<a>协议</a></Checkbox>\n              )}\n            </FormItem>\n            <FormItem style={{textAlign: 'center'}} {...tailFormItemLayout}>\n              <Button type=\"primary\" htmlType=\"submit\" disabled={!getFieldValue('agreement')}>提交</Button>\n            </FormItem>\n          </Form>\n        </Card>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nexport default FormDemo1"]},"metadata":{},"sourceType":"module"}