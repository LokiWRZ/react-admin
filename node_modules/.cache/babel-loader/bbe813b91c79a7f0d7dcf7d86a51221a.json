{"ast":null,"code":"var _dec, _class;\n\nimport React from 'react';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport { loadData } from '../../redux/user.redux';\nimport { connect } from 'react-redux'; //进行判断是否登陆并进行路由跳转\n\nlet AuthRoute = (_dec = connect(null, {\n  loadData\n}), withRouter(_class = _dec(_class = class AuthRoute extends React.Component {\n  componentDidMount() {\n    const publicList = ['/login', '/register'];\n    const pathname = this.props.location.pathname;\n\n    if (publicList.indexOf(pathname) > -1) {\n      return null;\n    } //获取用户信息\n\n\n    axios.get('/user/info').then(res => {\n      if (res.status === 200) {\n        //过滤用户，code为1的表示没登录，自动跳转到login页面\n        if (res.data.code === 0) {\n          // console.log(\"authroute--->user/info-->data\",res.data.data);\n          this.props.loadData(res.data.data);\n        } else {\n          this.props.history.push('/login');\n        } // console.log(res.data);\n\n      }\n    }); //用户状态：是否登陆 \n    //现在的URL地址  login是不需要跳转的\n    //用户的身份是boss还是牛人\n    //用户是否完善信息（头像，简介）\n  }\n\n  render() {\n    return null;\n  }\n\n}) || _class) || _class);\nexport default AuthRoute;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/component/authroute/authroute.js"],"names":["React","axios","withRouter","loadData","connect","AuthRoute","Component","componentDidMount","publicList","pathname","props","location","indexOf","get","then","res","status","data","code","history","push","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;IAMMC,S,WAJLD,OAAO,CACP,IADO,EAEP;AAACD,EAAAA;AAAD,CAFO,C,EADPD,U,wBAAD,MAKMG,SALN,SAKwBL,KAAK,CAACM,SAL9B,CAKuC;AACnCC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,UAAU,GAAG,CAAC,QAAD,EAAU,WAAV,CAAnB;AACA,UAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,QAArC;;AACA,QAAGD,UAAU,CAACI,OAAX,CAAmBH,QAAnB,IAA6B,CAAC,CAAjC,EAAmC;AAC/B,aAAO,IAAP;AACH,KALc,CAMf;;;AACAR,IAAAA,KAAK,CAACY,GAAN,CAAU,YAAV,EAAwBC,IAAxB,CAA6BC,GAAG,IAAE;AAC9B,UAAGA,GAAG,CAACC,MAAJ,KAAa,GAAhB,EAAoB;AAChB;AACA,YAAGD,GAAG,CAACE,IAAJ,CAASC,IAAT,KAAgB,CAAnB,EAAqB;AACjB;AACA,eAAKR,KAAL,CAAWP,QAAX,CAAoBY,GAAG,CAACE,IAAJ,CAASA,IAA7B;AACH,SAHD,MAGK;AACD,eAAKP,KAAL,CAAWS,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH,SAPe,CAQhB;;AACH;AACJ,KAXD,EAPe,CAmBf;AACA;AACA;AACA;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJ,WAAO,IAAP;AACH;;AA3BkC,C;AA6BvC,eAAehB,SAAf","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport {withRouter} from 'react-router-dom'\nimport { loadData } from '../../redux/user.redux'\nimport {connect} from 'react-redux'\n\n//进行判断是否登陆并进行路由跳转\n@withRouter\n@connect(\n\tnull,\n\t{loadData}\n)\nclass AuthRoute extends React.Component{\n    componentDidMount(){\n        const publicList = ['/login','/register']\n        const pathname = this.props.location.pathname\n        if(publicList.indexOf(pathname)>-1){\n            return null\n        }\n        //获取用户信息\n        axios.get('/user/info').then(res=>{\n            if(res.status===200){\n                //过滤用户，code为1的表示没登录，自动跳转到login页面\n                if(res.data.code===0){\n                    // console.log(\"authroute--->user/info-->data\",res.data.data);\n                    this.props.loadData(res.data.data)\n                }else{\n                    this.props.history.push('/login')\n                }\n                // console.log(res.data);\n            }\n        })\n        //用户状态：是否登陆 \n        //现在的URL地址  login是不需要跳转的\n        //用户的身份是boss还是牛人\n        //用户是否完善信息（头像，简介）\n    }\n    render(){\n        return null\n    }\n}\nexport default AuthRoute"]},"metadata":{},"sourceType":"module"}