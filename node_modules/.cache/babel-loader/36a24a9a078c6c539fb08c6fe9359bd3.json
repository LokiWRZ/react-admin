{"ast":null,"code":"var _class,\n    _temp,\n    _jsxFileName = \"/Users/loki/feature1/Handy-Booking-Management-System/src/component/CustomMenu/index.js\";\n\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu, Icon } from 'antd'; //此组件的意义就是将数据抽离出来，通过传递数据去渲染\n\nlet CustomMenu = withRouter(_class = (_temp = class CustomMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      openKeys: [],\n      selectedKeys: []\n    };\n\n    this.onOpenChange = openKeys => {\n      //此函数的作用只展开当前父级菜单（父级菜单下可能还有子菜单）\n      if (openKeys.length === 0 || openKeys.length === 1) {\n        this.setState({\n          openKeys\n        });\n        return;\n      } //最新展开的菜单\n\n\n      const latestOpenKey = openKeys[openKeys.length - 1]; //判断最新展开的菜单是不是父级菜单，若是父级菜单就只展开一个，不是父级菜单就展开父级菜单和当前子菜单\n      //因为我的子菜单的key包含了父级菜单，所以不用像官网的例子单独定义父级菜单数组，然后比较当前菜单在不在父级菜单数组里面。\n      //只适用于3级菜单\n\n      if (latestOpenKey.includes(openKeys[0])) {\n        this.setState({\n          openKeys\n        });\n      } else {\n        this.setState({\n          openKeys: [latestOpenKey]\n        });\n      }\n    };\n\n    this.renderMenuItem = ({\n      key,\n      icon,\n      title\n    }) => {\n      return /*#__PURE__*/React.createElement(Menu.Item, {\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, icon && /*#__PURE__*/React.createElement(Icon, {\n        type: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, title)));\n    };\n\n    this.renderSubMenu = ({\n      key,\n      icon,\n      title,\n      subs\n    }) => {\n      return /*#__PURE__*/React.createElement(Menu.SubMenu, {\n        key: key,\n        title: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 38\n          }\n        }, icon && /*#__PURE__*/React.createElement(Icon, {\n          type: icon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 53\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 73\n          }\n        }, title)),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 7\n        }\n      }, subs && subs.map(item => {\n        return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n      }));\n    };\n  }\n\n  componentDidMount() {\n    // 防止页面刷新侧边栏又初始化了\n    const pathname = this.props.location.pathname; //获取当前所在的目录层级\n\n    const rank = pathname.split('/');\n\n    switch (rank.length) {\n      case 2:\n        //一级目录\n        this.setState({\n          selectedKeys: [pathname]\n        });\n        break;\n\n      case 5:\n        //三级目录，要展开两个subMenu\n        this.setState({\n          selectedKeys: [pathname],\n          openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\n        });\n        break;\n\n      default:\n        this.setState({\n          selectedKeys: [pathname],\n          openKeys: [pathname.substr(0, pathname.lastIndexOf('/'))]\n        });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //当点击面包屑导航时，侧边栏要同步响应\n    const pathname = nextProps.location.pathname;\n\n    if (this.props.location.pathname !== pathname) {\n      this.setState({\n        selectedKeys: [pathname]\n      });\n    }\n  }\n\n  render() {\n    const {\n      openKeys,\n      selectedKeys\n    } = this.state;\n    return /*#__PURE__*/React.createElement(Menu, {\n      onOpenChange: this.onOpenChange,\n      onClick: ({\n        key\n      }) => this.setState({\n        selectedKeys: [key]\n      }),\n      openKeys: openKeys,\n      selectedKeys: selectedKeys,\n      theme: this.props.theme ? this.props.theme : 'dark',\n      mode: \"inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, this.props.menus && this.props.menus.map(item => {\n      return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item);\n    }));\n  }\n\n}, _temp)) || _class;\n\nexport default CustomMenu;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/component/CustomMenu/index.js"],"names":["React","Link","withRouter","Menu","Icon","CustomMenu","Component","state","openKeys","selectedKeys","onOpenChange","length","setState","latestOpenKey","includes","renderMenuItem","key","icon","title","renderSubMenu","subs","map","item","componentDidMount","pathname","props","location","rank","split","slice","join","substr","lastIndexOf","componentWillReceiveProps","nextProps","render","theme","menus"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link,withRouter} from 'react-router-dom'\nimport {Menu, Icon} from 'antd'\n\n//此组件的意义就是将数据抽离出来，通过传递数据去渲染\n@withRouter\nclass CustomMenu extends React.Component {\n  state = {\n    openKeys: [],\n    selectedKeys: []\n  }\n\n  componentDidMount() {\n    // 防止页面刷新侧边栏又初始化了\n    const pathname = this.props.location.pathname\n    //获取当前所在的目录层级\n    const rank = pathname.split('/')\n    switch (rank.length) {\n      case 2 :  //一级目录\n        this.setState({\n          selectedKeys: [pathname]\n        })\n        break;\n      case 5 : //三级目录，要展开两个subMenu\n        this.setState({\n          selectedKeys: [pathname],\n          openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\n        })\n        break;\n      default :\n        this.setState({\n          selectedKeys: [pathname],\n          openKeys: [pathname.substr(0, pathname.lastIndexOf('/'))]\n        })\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    //当点击面包屑导航时，侧边栏要同步响应\n    const pathname = nextProps.location.pathname\n    if (this.props.location.pathname !== pathname) {\n      this.setState({\n        selectedKeys: [pathname],\n      })\n    }\n  }\n\n  onOpenChange = (openKeys) => {\n    //此函数的作用只展开当前父级菜单（父级菜单下可能还有子菜单）\n    if (openKeys.length === 0 || openKeys.length === 1) {\n      this.setState({\n        openKeys\n      })\n      return\n    }\n\n    //最新展开的菜单\n    const latestOpenKey = openKeys[openKeys.length - 1]\n    //判断最新展开的菜单是不是父级菜单，若是父级菜单就只展开一个，不是父级菜单就展开父级菜单和当前子菜单\n    //因为我的子菜单的key包含了父级菜单，所以不用像官网的例子单独定义父级菜单数组，然后比较当前菜单在不在父级菜单数组里面。\n    //只适用于3级菜单\n    if (latestOpenKey.includes(openKeys[0])) {\n      this.setState({\n        openKeys\n      })\n    } else {\n      this.setState({\n        openKeys: [latestOpenKey]\n      })\n    }\n  }\n\n  renderMenuItem = ({key, icon, title,}) => {\n    return (\n      <Menu.Item key={key}>\n        <Link to={key}>\n          {icon && <Icon type={icon}/>}\n          <span>{title}</span>\n        </Link>\n      </Menu.Item>\n    )\n  }\n  renderSubMenu = ({key, icon, title, subs}) => {\n    return (\n      <Menu.SubMenu key={key} title={<span>{icon && <Icon type={icon}/>}<span>{title}</span></span>}>\n        {\n          subs && subs.map(item => {\n            return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n          })\n        }\n      </Menu.SubMenu>\n    )\n  }\n\n  render() {\n    const {openKeys, selectedKeys} = this.state\n    return (\n      <Menu\n        onOpenChange={this.onOpenChange}\n        onClick={({key}) => this.setState({selectedKeys: [key]})}\n        openKeys={openKeys}\n        selectedKeys={selectedKeys}\n        theme={this.props.theme ? this.props.theme : 'dark'}\n        mode='inline'>\n        {\n          this.props.menus && this.props.menus.map(item => {\n            return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\n          })\n        }\n      </Menu>\n    )\n  }\n}\n\nexport default CustomMenu"]},"metadata":{},"sourceType":"module"}