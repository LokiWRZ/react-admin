{"ast":null,"code":"import axios from 'axios';\nimport { getRedirectPath } from '../util';\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nconst LOGIN_SUCESS = 'LOGIN_SUCESS';\nconst ERROR_MSG = 'ERROR_MSG';\nconst LOAD_DATA = 'LOAD_DATA';\nconst initState = {\n  redirectTo: '',\n  isAuth: false,\n  msg: '',\n  user: '',\n  type: ''\n}; // reducer\n\nexport function user(state = initState, action) {\n  switch (action.type) {\n    case REGISTER_SUCCESS:\n      return { ...state,\n        msg: '',\n        redirectTo: getRedirectPath(action.payload),\n        isAuth: true,\n        ...action.payload\n      };\n\n    case LOGIN_SUCESS:\n      return { ...state,\n        msg: '',\n        redirectTo: getRedirectPath(action.payload),\n        isAuth: true,\n        ...action.payload\n      };\n\n    case LOAD_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case ERROR_MSG:\n      return { ...state,\n        isAuth: false,\n        msg: action.msg\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction registerSuccess(data) {\n  return {\n    type: REGISTER_SUCCESS,\n    payload: data\n  };\n}\n\nfunction loginSuccess(data) {\n  return {\n    type: LOGIN_SUCESS,\n    payload: data\n  };\n}\n\nfunction errorMsg(msg) {\n  return {\n    msg,\n    type: ERROR_MSG\n  };\n}\n\nexport function loadData(userinfo) {\n  console.log(loadData);\n  return {\n    type: LOAD_DATA,\n    payload: userinfo\n  };\n}\nexport function login({\n  user,\n  pwd\n}) {\n  if (!user || !pwd) {\n    return errorMsg('用户密码必须输入');\n  }\n\n  return dispatch => {\n    axios.post('/user/login', {\n      user,\n      pwd\n    }).then(res => {\n      if (res.status == 200 && res.data.code === 0) {\n        // dispatch(registerSuccess({user,pwd,type}))\n        dispatch(loginSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function regisger({\n  user,\n  pwd,\n  repeatpwd,\n  type\n}) {\n  if (!user || !pwd || !type) {\n    return errorMsg('用户名密码必须输入');\n  }\n\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码和确认密码不同');\n  }\n\n  return dispatch => {\n    axios.post('/user/register', {\n      user,\n      pwd,\n      type\n    }).then(res => {\n      if (res.status == 200 && res.data.code === 0) {\n        dispatch(registerSuccess({\n          user,\n          pwd,\n          type\n        }));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/redux/user.redux.js"],"names":["axios","getRedirectPath","REGISTER_SUCCESS","LOGIN_SUCESS","ERROR_MSG","LOAD_DATA","initState","redirectTo","isAuth","msg","user","type","state","action","payload","registerSuccess","data","loginSuccess","errorMsg","loadData","userinfo","console","log","login","pwd","dispatch","post","then","res","status","code","regisger","repeatpwd"],"mappings":"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","sourcesContent":["\nimport axios from 'axios'\nimport {getRedirectPath} from '../util'\nconst REGISTER_SUCCESS = 'REGISTER_SUCCESS'\nconst LOGIN_SUCESS = 'LOGIN_SUCESS'\nconst ERROR_MSG = 'ERROR_MSG'\nconst LOAD_DATA = 'LOAD_DATA'\nconst initState={\n\tredirectTo:'',\n\tisAuth:false,\n\tmsg:'',\n\tuser:'',\n\ttype:''\n}\n// reducer\nexport function user(state=initState, action){\n\tswitch(action.type){\n\t\tcase REGISTER_SUCCESS:\n\t\t\treturn {...state, msg:'',redirectTo:getRedirectPath(action.payload),isAuth:true,...action.payload}\n\t\tcase LOGIN_SUCESS:\n\t\t\treturn {...state, msg:'',redirectTo:getRedirectPath(action.payload),isAuth:true,...action.payload}\n\t\tcase LOAD_DATA:\n\t\t\treturn {...state, ...action.payload}\n\t\tcase ERROR_MSG:\n\t\t\treturn {...state, isAuth:false, msg:action.msg}\n\t\tdefault:\n\t\t\treturn state\n\t}\n} \n\nfunction registerSuccess(data){\n\treturn { type:REGISTER_SUCCESS, payload:data}\n}\nfunction loginSuccess(data){\n\treturn { type:LOGIN_SUCESS , payload:data}\n}\nfunction errorMsg(msg){\n\treturn { msg, type:ERROR_MSG }\n}\n\nexport function loadData(userinfo){\n\tconsole.log(loadData)\n\treturn { type:LOAD_DATA, payload:userinfo}\n}\nexport function login({user,pwd}){\n\tif (!user||!pwd) {\n\t\treturn errorMsg('用户密码必须输入')\n\t}\n\treturn dispatch=>{\n\t\taxios.post('/user/login',{user,pwd})\n\t\t\t.then(res=>{\n\t\t\t\tif (res.status==200&&res.data.code===0) {\n\t\t\t\t\t// dispatch(registerSuccess({user,pwd,type}))\n\t\t\t\t\tdispatch(loginSuccess(res.data.data))\n\t\t\t\t}else{\n\t\t\t\t\tdispatch(errorMsg(res.data.msg))\n\t\t\t\t}\n\t\t\t})\t\t\n\t}\n\n\n}\n\nexport function regisger({user,pwd,repeatpwd,type}){\n\tif (!user||!pwd||!type) {\n\t\treturn errorMsg('用户名密码必须输入')\n\t}\n\tif (pwd!==repeatpwd) {\n\t\treturn errorMsg('密码和确认密码不同')\n\t}\n\treturn dispatch=>{\n\t\taxios.post('/user/register',{user,pwd,type})\n\t\t\t.then(res=>{\n\t\t\t\tif (res.status==200&&res.data.code===0) {\n\t\t\t\t\tdispatch(registerSuccess({user,pwd,type}))\n\t\t\t\t}else{\n\t\t\t\t\tdispatch(errorMsg(res.data.msg))\n\t\t\t\t}\n\t\t\t})\t\t\n\t}\n\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}