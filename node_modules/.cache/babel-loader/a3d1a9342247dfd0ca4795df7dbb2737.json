{"ast":null,"code":"import axios from \"axios\";\nimport { getRedirectPath } from '../util'; // const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\n// const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\n//用户操作成功，包括登录、注册、修改\n\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\nconst LOAD_DATA = 'LOAD_DATA';\nconst ERROR_MSG = 'ERROR_MSG';\nconst LOGOUT = 'LOGOUT';\nconst initState = {\n  redirectTo: '',\n  // isAuth:false,\n  msg: '',\n  user: '',\n  pwd: '',\n  type: ''\n};\nexport function user(state = initState, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      return { ...state,\n        msg: '',\n        redirectTo: getRedirectPath(action.payload),\n        ...action.payload,\n        pwd: ''\n      };\n    // case LOGIN_SUCCESS:\n    //     return {...state,msg:'',redirectTo:getRedirectPath(action.payload),isAuth:true,...action.payload}\n    // case AUTH_SUCCESS:\n\n    case LOAD_DATA:\n      return { ...state,\n        ...action.payload\n      };\n\n    case ERROR_MSG:\n      return { ...state,\n        isAuth: false,\n        msg: action.msg\n      };\n\n    case LOGOUT:\n      return { ...initState,\n        redirectTo: '/login'\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction authSuccess(obj) {\n  const {\n    pwd,\n    ...data\n  } = obj;\n  return {\n    type: AUTH_SUCCESS,\n    payload: data\n  };\n} // function registerSuccess(data){\n//     return {type:REGISTER_SUCCESS,payload:data}\n// }\n// function loginSuccess(data){\n//     console.log('user.redux.js---->loginSuccess--->data',data);\n//     return {type:LOGIN_SUCCESS,payload:data}\n// }\n//作用：将数据放到redux中\n\n\nexport function loadData(userinfo) {\n  // console.log(loadData)\n  return {\n    type: LOAD_DATA,\n    payload: userinfo\n  };\n}\n\nfunction errorMsg(msg) {\n  return {\n    msg,\n    type: ERROR_MSG\n  };\n}\n\nexport function logoutSubmit() {\n  return {\n    type: LOGOUT\n  };\n}\nexport function register({\n  user,\n  pwd,\n  repeatpwd,\n  type\n}) {\n  if (!user || !pwd || !type) {\n    return errorMsg('用户名密码必须输入');\n  }\n\n  if (pwd !== repeatpwd) {\n    return errorMsg('密码不一致');\n  }\n\n  return dispatch => {\n    axios.post('/user/register', {\n      user,\n      pwd,\n      type\n    }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        dispatch(authSuccess({\n          user,\n          pwd,\n          type\n        }));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function update(data) {\n  return dispatch => {\n    axios.post('/user/update', data).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        // console.log(res.data.data);\n        dispatch(authSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}\nexport function login({\n  user,\n  pwd\n}) {\n  if (!user || !pwd) {\n    return errorMsg('用户名密码必须输入');\n  }\n\n  return dispatch => {\n    axios.post('/user/login', {\n      user,\n      pwd\n    }).then(res => {\n      if (res.status === 200 && res.data.code === 0) {\n        // console.log(res.data.data);\n        dispatch(authSuccess(res.data.data));\n      } else {\n        dispatch(errorMsg(res.data.msg));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/redux/user.redux.js"],"names":["axios","getRedirectPath","AUTH_SUCCESS","LOAD_DATA","ERROR_MSG","LOGOUT","initState","redirectTo","msg","user","pwd","type","state","action","payload","isAuth","authSuccess","obj","data","loadData","userinfo","errorMsg","logoutSubmit","register","repeatpwd","dispatch","post","then","res","status","code","update","login"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {getRedirectPath} from '../util'\n\n// const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\n// const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\n//用户操作成功，包括登录、注册、修改\nconst AUTH_SUCCESS = 'AUTH_SUCCESS'\nconst LOAD_DATA = 'LOAD_DATA'\nconst ERROR_MSG = 'ERROR_MSG'\nconst LOGOUT = 'LOGOUT'\n\nconst initState={\n    redirectTo:'',\n    // isAuth:false,\n    msg:'',\n    user:'',\n    pwd:'',\n    type:''\n}\n\n\nexport function user(state=initState,action){\n    switch(action.type){\n        case AUTH_SUCCESS:\n            return {...state,msg:'',redirectTo:getRedirectPath(action.payload),...action.payload,pwd:''}\n        // case LOGIN_SUCCESS:\n        //     return {...state,msg:'',redirectTo:getRedirectPath(action.payload),isAuth:true,...action.payload}\n        // case AUTH_SUCCESS:\n        case LOAD_DATA:\n            return {...state, ...action.payload}\n        case ERROR_MSG:\n            return {...state,isAuth:false,msg:action.msg}\n        case LOGOUT:\n\t\t\treturn {...initState,redirectTo:'/login'}\n        default:\n            return state\n    }\n   \n}\n\nfunction authSuccess(obj){\n    const {pwd,...data} = obj\n    return {type:AUTH_SUCCESS,payload:data}\n}\n\n// function registerSuccess(data){\n//     return {type:REGISTER_SUCCESS,payload:data}\n// }\n\n// function loginSuccess(data){\n//     console.log('user.redux.js---->loginSuccess--->data',data);\n    \n//     return {type:LOGIN_SUCCESS,payload:data}\n// }\n\n//作用：将数据放到redux中\nexport function loadData(userinfo){\n\t// console.log(loadData)\n\treturn { type:LOAD_DATA, payload:userinfo}\n}\nfunction errorMsg(msg){\n    return {msg,type:ERROR_MSG}\n}\nexport function logoutSubmit(){\n\treturn { type:LOGOUT }\n}\nexport function register({user,pwd,repeatpwd,type}){\n    if(!user||!pwd||!type){\n        return errorMsg('用户名密码必须输入')\n    }\n    if(pwd!==repeatpwd){\n        return errorMsg('密码不一致')\n    }\n    return dispatch=>{\n        axios.post('/user/register',{user,pwd,type})\n        .then(res=>{\n            if(res.status===200&&res.data.code===0){\n                dispatch(authSuccess({user,pwd,type}))\n            }else{\n                dispatch(errorMsg(res.data.msg))\n            }\n        })\n    }\n    \n}\n\nexport function update(data){\n   return dispatch=>{\n       axios.post('/user/update',data)\n       .then(res=>{\n            if(res.status===200&&res.data.code===0){\n                // console.log(res.data.data);\n                dispatch(authSuccess(res.data.data))\n            }else{\n                dispatch(errorMsg(res.data.msg))\n            }\n       })\n   }\n}\n\nexport function login({user,pwd}){\n    if(!user||!pwd){\n        return errorMsg('用户名密码必须输入')\n    }\n    return dispatch=>{\n        axios.post('/user/login',{user,pwd})\n        .then(res=>{\n            if(res.status===200&&res.data.code===0){\n                // console.log(res.data.data);\n                dispatch(authSuccess(res.data.data))\n            }else{\n                dispatch(errorMsg(res.data.msg))\n            }\n        })\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}