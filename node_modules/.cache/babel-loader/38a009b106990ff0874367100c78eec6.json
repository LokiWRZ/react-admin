{"ast":null,"code":"var _dec,\n    _dec2,\n    _class,\n    _temp,\n    _jsxFileName = \"/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Login/LoginForm.js\";\n\nimport React from 'react';\nimport { randomNum, calculateWidth } from '../../utils/utils';\nimport { withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react/index';\nimport { Form, Input, Row, Col } from 'antd';\nimport PromptBox from '../../component/PromptBox';\nlet LoginForm = (_dec = inject('appStore'), _dec2 = Form.create(), withRouter(_class = _dec(_class = observer(_class = _dec2(_class = (_temp = class LoginForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      focusItem: -1,\n      //保存当前聚焦的input\n      code: '' //验证码\n\n    };\n\n    this.createCode = () => {\n      const ctx = this.canvas.getContext('2d');\n      const chars = [1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n      let code = '';\n      ctx.clearRect(0, 0, 80, 39);\n\n      for (let i = 0; i < 4; i++) {\n        const char = chars[randomNum(0, 57)];\n        code += char;\n        ctx.font = randomNum(20, 25) + 'px SimHei'; //设置字体随机大小\n\n        ctx.fillStyle = '#D3D7F7';\n        ctx.textBaseline = 'middle';\n        ctx.shadowOffsetX = randomNum(-3, 3);\n        ctx.shadowOffsetY = randomNum(-3, 3);\n        ctx.shadowBlur = randomNum(-3, 3);\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.3)';\n        let x = 80 / 5 * (i + 1);\n        let y = 39 / 2;\n        let deg = randomNum(-25, 25);\n        /**设置旋转角度和坐标原点**/\n\n        ctx.translate(x, y);\n        ctx.rotate(deg * Math.PI / 180);\n        ctx.fillText(char, 0, 0);\n        /**恢复旋转角度和坐标原点**/\n\n        ctx.rotate(-deg * Math.PI / 180);\n        ctx.translate(-x, -y);\n      }\n\n      this.setState({\n        code\n      });\n    };\n\n    this.loginSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        focusItem: -1\n      });\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          // 表单登录时，若验证码长度小于4则不会验证，所以我们这里要手动验证一次，线上的未修复\n          if (this.state.code.toUpperCase() !== values.verification.toUpperCase()) {\n            this.props.form.setFields({\n              verification: {\n                value: values.verification,\n                errors: [new Error('验证码错误')]\n              }\n            });\n            return;\n          }\n\n          const users = this.props.appStore.users; // 检测用户名是否存在\n\n          const result = users.find(item => item.username === values.username);\n\n          if (!result) {\n            this.props.form.setFields({\n              username: {\n                value: values.username,\n                errors: [new Error('用户名不存在')]\n              }\n            });\n            return;\n          } else {\n            //检测密码是否错误\n            if (result.password !== values.password) {\n              this.props.form.setFields({\n                password: {\n                  value: values.password,\n                  errors: [new Error('密码错误')]\n                }\n              });\n              return;\n            }\n          }\n\n          this.props.appStore.toggleLogin(true, {\n            username: values.username\n          });\n          const {\n            from\n          } = this.props.location.state || {\n            from: {\n              pathname: '/'\n            }\n          };\n          this.props.history.push(from);\n        }\n      });\n    };\n\n    this.register = () => {\n      this.props.switchShowBox('register');\n      setTimeout(() => this.props.form.resetFields(), 500);\n    };\n  }\n\n  componentDidMount() {\n    this.createCode();\n  }\n  /**\n   * 生成验证码\n   */\n\n\n  render() {\n    const {\n      getFieldDecorator,\n      getFieldError\n    } = this.props.form;\n    const {\n      focusItem,\n      code\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }\n    }, \"\\u7BA1\\u7406\\u5458\\u767B\\u5F55\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.loginSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Item, {\n      help: getFieldError('username') && /*#__PURE__*/React.createElement(PromptBox, {\n        info: getFieldError('username'),\n        width: calculateWidth(getFieldError('username')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        message: '请输入用户名'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      onFocus: () => this.setState({\n        focusItem: 0\n      }),\n      onBlur: () => this.setState({\n        focusItem: -1\n      }),\n      maxLength: 16,\n      placeholder: \"\\u7528\\u6237\\u540D\",\n      addonBefore: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconfont icon-User\",\n        style: focusItem === 0 ? styles.focus : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      help: getFieldError('password') && /*#__PURE__*/React.createElement(PromptBox, {\n        info: getFieldError('password'),\n        width: calculateWidth(getFieldError('password')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: '请输入密码'\n      }]\n    })( /*#__PURE__*/React.createElement(Input, {\n      onFocus: () => this.setState({\n        focusItem: 1\n      }),\n      onBlur: () => this.setState({\n        focusItem: -1\n      }),\n      type: \"password\",\n      maxLength: 16,\n      placeholder: \"\\u5BC6\\u7801\",\n      addonBefore: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconfont icon-suo1\",\n        style: focusItem === 1 ? styles.focus : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 30\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Item, {\n      help: getFieldError('verification') && /*#__PURE__*/React.createElement(PromptBox, {\n        info: getFieldError('verification'),\n        width: calculateWidth(getFieldError('verification')),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, getFieldDecorator('verification', {\n      validateFirst: true,\n      rules: [{\n        required: true,\n        message: '请输入验证码'\n      }, {\n        validator: (rule, value, callback) => {\n          if (value.length >= 4 && code.toUpperCase() !== value.toUpperCase()) {\n            callback('验证码错误');\n          }\n\n          callback();\n        }\n      }]\n    })( /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 15,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onFocus: () => this.setState({\n        focusItem: 2\n      }),\n      onBlur: () => this.setState({\n        focusItem: -1\n      }),\n      maxLength: 4,\n      placeholder: \"\\u9A8C\\u8BC1\\u7801\",\n      addonBefore: /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconfont icon-securityCode-b\",\n        style: focusItem === 2 ? styles.focus : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      span: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      onClick: this.createCode,\n      width: \"80\",\n      height: \"39\",\n      ref: el => this.canvas = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"loginBtn\",\n      type: \"submit\",\n      value: \"\\u767B\\u5F55\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"registerBtn\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, \"\\u6CE8\\u518C\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, \"\\u6B22\\u8FCE\\u767B\\u9646\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\")));\n  }\n\n}, _temp)) || _class) || _class) || _class) || _class);\nconst styles = {\n  focus: {\n    width: '20px',\n    opacity: 1\n  }\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Login/LoginForm.js"],"names":["React","randomNum","calculateWidth","withRouter","inject","observer","Form","Input","Row","Col","PromptBox","LoginForm","create","Component","state","focusItem","code","createCode","ctx","canvas","getContext","chars","clearRect","i","char","font","fillStyle","textBaseline","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","x","y","deg","translate","rotate","Math","PI","fillText","setState","loginSubmit","e","preventDefault","props","form","validateFields","err","values","toUpperCase","verification","setFields","value","errors","Error","users","appStore","result","find","item","username","password","toggleLogin","from","location","pathname","history","push","register","switchShowBox","setTimeout","resetFields","componentDidMount","render","getFieldDecorator","getFieldError","className","rules","required","message","styles","focus","validateFirst","validator","rule","callback","length","el","width","opacity"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,mBAA1C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,kBAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,GAAtB,EAA2BC,GAA3B,QAAsC,MAAtC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;IAIMC,S,WADOP,MAAM,CAAC,UAAD,C,UAAwBE,IAAI,CAACM,MAAL,E,EAA1CT,U,wBAAgCE,Q,kCAAjC,MACMM,SADN,SACwBX,KAAK,CAACa,SAD9B,CACwC;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACNC,MAAAA,SAAS,EAAE,CAAC,CADN;AACW;AACjBC,MAAAA,IAAI,EAAE,EAFA,CAEW;;AAFX,KAD8B;;AAAA,SAatCC,UAbsC,GAazB,MAAM;AACjB,YAAMC,GAAG,GAAG,KAAKC,MAAL,CAAYC,UAAZ,CAAuB,IAAvB,CAAZ;AACA,YAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,EAA2C,GAA3C,EAAgD,GAAhD,EAAqD,GAArD,EAA0D,GAA1D,EAA+D,GAA/D,EAAoE,GAApE,EAAyE,GAAzE,EAA8E,GAA9E,EAAmF,GAAnF,EAAwF,GAAxF,EAA6F,GAA7F,EAAkG,GAAlG,EAAuG,GAAvG,EAA4G,GAA5G,EAAiH,GAAjH,EAAsH,GAAtH,EAA2H,GAA3H,EAAgI,GAAhI,EAAqI,GAArI,EAA0I,GAA1I,EAA+I,GAA/I,EAAoJ,GAApJ,EAAyJ,GAAzJ,EAA8J,GAA9J,EAAmK,GAAnK,EAAwK,GAAxK,EAA6K,GAA7K,EAAkL,GAAlL,EAAuL,GAAvL,EAA4L,GAA5L,EAAiM,GAAjM,EAAsM,GAAtM,EAA2M,GAA3M,EAAgN,GAAhN,EAAqN,GAArN,EAA0N,GAA1N,EAA+N,GAA/N,EAAoO,GAApO,EAAyO,GAAzO,EAA8O,GAA9O,EAAmP,GAAnP,EAAwP,GAAxP,EAA6P,GAA7P,EAAkQ,GAAlQ,EAAuQ,GAAvQ,CAAd;AACA,UAAIL,IAAI,GAAG,EAAX;AACAE,MAAAA,GAAG,CAACI,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoB,EAApB,EAAwB,EAAxB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,cAAMC,IAAI,GAAGH,KAAK,CAACpB,SAAS,CAAC,CAAD,EAAI,EAAJ,CAAV,CAAlB;AACAe,QAAAA,IAAI,IAAIQ,IAAR;AACAN,QAAAA,GAAG,CAACO,IAAJ,GAAWxB,SAAS,CAAC,EAAD,EAAK,EAAL,CAAT,GAAoB,WAA/B,CAH0B,CAGkB;;AAC5CiB,QAAAA,GAAG,CAACQ,SAAJ,GAAgB,SAAhB;AACAR,QAAAA,GAAG,CAACS,YAAJ,GAAmB,QAAnB;AACAT,QAAAA,GAAG,CAACU,aAAJ,GAAoB3B,SAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAA7B;AACAiB,QAAAA,GAAG,CAACW,aAAJ,GAAoB5B,SAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAA7B;AACAiB,QAAAA,GAAG,CAACY,UAAJ,GAAiB7B,SAAS,CAAC,CAAC,CAAF,EAAK,CAAL,CAA1B;AACAiB,QAAAA,GAAG,CAACa,WAAJ,GAAkB,oBAAlB;AACA,YAAIC,CAAC,GAAG,KAAK,CAAL,IAAUT,CAAC,GAAG,CAAd,CAAR;AACA,YAAIU,CAAC,GAAG,KAAK,CAAb;AACA,YAAIC,GAAG,GAAGjC,SAAS,CAAC,CAAC,EAAF,EAAM,EAAN,CAAnB;AACA;;AACAiB,QAAAA,GAAG,CAACiB,SAAJ,CAAcH,CAAd,EAAiBC,CAAjB;AACAf,QAAAA,GAAG,CAACkB,MAAJ,CAAWF,GAAG,GAAGG,IAAI,CAACC,EAAX,GAAgB,GAA3B;AACApB,QAAAA,GAAG,CAACqB,QAAJ,CAAaf,IAAb,EAAmB,CAAnB,EAAsB,CAAtB;AACA;;AACAN,QAAAA,GAAG,CAACkB,MAAJ,CAAW,CAACF,GAAD,GAAOG,IAAI,CAACC,EAAZ,GAAiB,GAA5B;AACApB,QAAAA,GAAG,CAACiB,SAAJ,CAAc,CAACH,CAAf,EAAkB,CAACC,CAAnB;AACD;;AACD,WAAKO,QAAL,CAAc;AACZxB,QAAAA;AADY,OAAd;AAGD,KA1CqC;;AAAA,SA2CtCyB,WA3CsC,GA2CvBC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKH,QAAL,CAAc;AACZzB,QAAAA,SAAS,EAAE,CAAC;AADA,OAAd;AAGA,WAAK6B,KAAL,CAAWC,IAAX,CAAgBC,cAAhB,CAA+B,CAACC,GAAD,EAAMC,MAAN,KAAiB;AAC9C,YAAI,CAACD,GAAL,EAAU;AACR;AACA,cAAI,KAAKjC,KAAL,CAAWE,IAAX,CAAgBiC,WAAhB,OAAkCD,MAAM,CAACE,YAAP,CAAoBD,WAApB,EAAtC,EAAyE;AACvE,iBAAKL,KAAL,CAAWC,IAAX,CAAgBM,SAAhB,CAA0B;AACxBD,cAAAA,YAAY,EAAE;AACZE,gBAAAA,KAAK,EAAEJ,MAAM,CAACE,YADF;AAEZG,gBAAAA,MAAM,EAAE,CAAC,IAAIC,KAAJ,CAAU,OAAV,CAAD;AAFI;AADU,aAA1B;AAMA;AACD;;AAED,gBAAMC,KAAK,GAAG,KAAKX,KAAL,CAAWY,QAAX,CAAoBD,KAAlC,CAZQ,CAaR;;AACA,gBAAME,MAAM,GAAGF,KAAK,CAACG,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACC,QAAL,KAAkBZ,MAAM,CAACY,QAA5C,CAAf;;AACA,cAAI,CAACH,MAAL,EAAa;AACX,iBAAKb,KAAL,CAAWC,IAAX,CAAgBM,SAAhB,CAA0B;AACxBS,cAAAA,QAAQ,EAAE;AACRR,gBAAAA,KAAK,EAAEJ,MAAM,CAACY,QADN;AAERP,gBAAAA,MAAM,EAAE,CAAC,IAAIC,KAAJ,CAAU,QAAV,CAAD;AAFA;AADc,aAA1B;AAMA;AACD,WARD,MAQO;AACL;AACA,gBAAIG,MAAM,CAACI,QAAP,KAAoBb,MAAM,CAACa,QAA/B,EAAyC;AACvC,mBAAKjB,KAAL,CAAWC,IAAX,CAAgBM,SAAhB,CAA0B;AACxBU,gBAAAA,QAAQ,EAAE;AACRT,kBAAAA,KAAK,EAAEJ,MAAM,CAACa,QADN;AAERR,kBAAAA,MAAM,EAAE,CAAC,IAAIC,KAAJ,CAAU,MAAV,CAAD;AAFA;AADc,eAA1B;AAMA;AACD;AACF;;AAED,eAAKV,KAAL,CAAWY,QAAX,CAAoBM,WAApB,CAAgC,IAAhC,EAAsC;AAACF,YAAAA,QAAQ,EAAEZ,MAAM,CAACY;AAAlB,WAAtC;AAEA,gBAAM;AAACG,YAAAA;AAAD,cAAS,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBlD,KAApB,IAA6B;AAACiD,YAAAA,IAAI,EAAE;AAACE,cAAAA,QAAQ,EAAE;AAAX;AAAP,WAA5C;AACA,eAAKrB,KAAL,CAAWsB,OAAX,CAAmBC,IAAnB,CAAwBJ,IAAxB;AACD;AACF,OA1CD;AA2CD,KA3FqC;;AAAA,SA4FtCK,QA5FsC,GA4F3B,MAAM;AACf,WAAKxB,KAAL,CAAWyB,aAAX,CAAyB,UAAzB;AACAC,MAAAA,UAAU,CAAC,MAAM,KAAK1B,KAAL,CAAWC,IAAX,CAAgB0B,WAAhB,EAAP,EAAsC,GAAtC,CAAV;AACD,KA/FqC;AAAA;;AAMtCC,EAAAA,iBAAiB,GAAI;AACnB,SAAKvD,UAAL;AACD;AAED;;;;;AAuFAwD,EAAAA,MAAM,GAAI;AACR,UAAM;AAACC,MAAAA,iBAAD;AAAoBC,MAAAA;AAApB,QAAqC,KAAK/B,KAAL,CAAWC,IAAtD;AACA,UAAM;AAAC9B,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,QAAoB,KAAKF,KAA/B;AACA,wBACE;AAAK,MAAA,SAAS,EAAE,KAAK8B,KAAL,CAAWgC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKnC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAEkC,aAAa,CAAC,UAAD,CAAb,iBACjB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,aAAa,CAAC,UAAD,CAA9B;AAA4C,QAAA,KAAK,EAAEzE,cAAc,CAACyE,aAAa,CAAC,UAAD,CAAd,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGD,iBAAiB,CAAC,UAAD,EAAa;AAC7BG,MAAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD;AADsB,KAAb,CAAjB,eAGC,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKvC,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE;AAAZ,OAAd,CADjB;AAEE,MAAA,MAAM,EAAE,MAAM,KAAKyB,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE,CAAC;AAAb,OAAd,CAFhB;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,WAAW,eAAE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,KAAK,EAAEA,SAAS,KAAK,CAAd,GAAkBiE,MAAM,CAACC,KAAzB,GAAiC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAFH,CADF,eAcE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAEN,aAAa,CAAC,UAAD,CAAb,iBACjB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,aAAa,CAAC,UAAD,CAA9B;AAA4C,QAAA,KAAK,EAAEzE,cAAc,CAACyE,aAAa,CAAC,UAAD,CAAd,CAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGD,iBAAiB,CAAC,UAAD,EAAa;AAC7BG,MAAAA,KAAK,EAAE,CAAC;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAAD;AADsB,KAAb,CAAjB,eAGC,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAKvC,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE;AAAZ,OAAd,CADjB;AAEE,MAAA,MAAM,EAAE,MAAM,KAAKyB,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE,CAAC;AAAb,OAAd,CAFhB;AAGE,MAAA,IAAI,EAAC,UAHP;AAIE,MAAA,SAAS,EAAE,EAJb;AAKE,MAAA,WAAW,EAAC,cALd;AAME,MAAA,WAAW,eAAE;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAqC,QAAA,KAAK,EAAEA,SAAS,KAAK,CAAd,GAAkBiE,MAAM,CAACC,KAAzB,GAAiC,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHD,CAFH,CAdF,eA4BE,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAEN,aAAa,CAAC,cAAD,CAAb,iBACjB,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEA,aAAa,CAAC,cAAD,CAA9B;AAAgD,QAAA,KAAK,EAAEzE,cAAc,CAACyE,aAAa,CAAC,cAAD,CAAd,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGD,iBAAiB,CAAC,cAAD,EAAiB;AACjCQ,MAAAA,aAAa,EAAE,IADkB;AAEjCL,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,QAAQ,EAAE,IAAX;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OADK,EAEL;AACEI,QAAAA,SAAS,EAAE,CAACC,IAAD,EAAOhC,KAAP,EAAciC,QAAd,KAA2B;AACpC,cAAIjC,KAAK,CAACkC,MAAN,IAAgB,CAAhB,IAAqBtE,IAAI,CAACiC,WAAL,OAAuBG,KAAK,CAACH,WAAN,EAAhD,EAAqE;AACnEoC,YAAAA,QAAQ,CAAC,OAAD,CAAR;AACD;;AACDA,UAAAA,QAAQ;AACT;AANH,OAFK;AAF0B,KAAjB,CAAjB,eAcC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,OAAO,EAAE,MAAM,KAAK7C,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE;AAAZ,OAAd,CADjB;AAEE,MAAA,MAAM,EAAE,MAAM,KAAKyB,QAAL,CAAc;AAACzB,QAAAA,SAAS,EAAE,CAAC;AAAb,OAAd,CAFhB;AAGE,MAAA,SAAS,EAAE,CAHb;AAIE,MAAA,WAAW,EAAC,oBAJd;AAKE,MAAA,WAAW,eAAE;AAAM,QAAA,SAAS,EAAC,8BAAhB;AACM,QAAA,KAAK,EAAEA,SAAS,KAAK,CAAd,GAAkBiE,MAAM,CAACC,KAAzB,GAAiC,EAD9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKhE,UAAtB;AAAkC,MAAA,KAAK,EAAC,IAAxC;AAA6C,MAAA,MAAM,EAAC,IAApD;AAAyD,MAAA,GAAG,EAAEsE,EAAE,IAAI,KAAKpE,MAAL,GAAcoE,EAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CAdD,CAFH,CA5BF,eA4DE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,SAAS,EAAC,UAAjB;AAA4B,MAAA,IAAI,EAAC,QAAjC;AAA0C,MAAA,KAAK,EAAC,cAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAE,KAAKnB,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CA5DF,CAFF,eAmEE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sEADF,CAnEF,CADF;AAyED;;AA7KqC,C;AAgLxC,MAAMY,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAE;AACLO,IAAAA,KAAK,EAAE,MADF;AAELC,IAAAA,OAAO,EAAE;AAFJ;AADM,CAAf;AAOA,eAAe9E,SAAf","sourcesContent":["import React from 'react'\nimport { randomNum, calculateWidth } from '../../utils/utils'\nimport { withRouter } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react/index'\nimport { Form, Input, Row, Col } from 'antd'\nimport PromptBox from '../../component/PromptBox'\n\n\n@withRouter @inject('appStore') @observer @Form.create()\nclass LoginForm extends React.Component {\n  state = {\n    focusItem: -1,   //保存当前聚焦的input\n    code: ''         //验证码\n  }\n\n  componentDidMount () {\n    this.createCode()\n  }\n\n  /**\n   * 生成验证码\n   */\n  createCode = () => {\n    const ctx = this.canvas.getContext('2d')\n    const chars = [1, 2, 3, 4, 5, 6, 7, 8, 9, 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n    let code = ''\n    ctx.clearRect(0, 0, 80, 39)\n    for (let i = 0; i < 4; i++) {\n      const char = chars[randomNum(0, 57)]\n      code += char\n      ctx.font = randomNum(20, 25) + 'px SimHei'  //设置字体随机大小\n      ctx.fillStyle = '#D3D7F7'\n      ctx.textBaseline = 'middle'\n      ctx.shadowOffsetX = randomNum(-3, 3)\n      ctx.shadowOffsetY = randomNum(-3, 3)\n      ctx.shadowBlur = randomNum(-3, 3)\n      ctx.shadowColor = 'rgba(0, 0, 0, 0.3)'\n      let x = 80 / 5 * (i + 1)\n      let y = 39 / 2\n      let deg = randomNum(-25, 25)\n      /**设置旋转角度和坐标原点**/\n      ctx.translate(x, y)\n      ctx.rotate(deg * Math.PI / 180)\n      ctx.fillText(char, 0, 0)\n      /**恢复旋转角度和坐标原点**/\n      ctx.rotate(-deg * Math.PI / 180)\n      ctx.translate(-x, -y)\n    }\n    this.setState({\n      code\n    })\n  }\n  loginSubmit = (e) => {\n    e.preventDefault()\n    this.setState({\n      focusItem: -1\n    })\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // 表单登录时，若验证码长度小于4则不会验证，所以我们这里要手动验证一次，线上的未修复\n        if (this.state.code.toUpperCase() !== values.verification.toUpperCase()) {\n          this.props.form.setFields({\n            verification: {\n              value: values.verification,\n              errors: [new Error('验证码错误')]\n            }\n          })\n          return\n        }\n\n        const users = this.props.appStore.users\n        // 检测用户名是否存在\n        const result = users.find(item => item.username === values.username)\n        if (!result) {\n          this.props.form.setFields({\n            username: {\n              value: values.username,\n              errors: [new Error('用户名不存在')]\n            }\n          })\n          return\n        } else {\n          //检测密码是否错误\n          if (result.password !== values.password) {\n            this.props.form.setFields({\n              password: {\n                value: values.password,\n                errors: [new Error('密码错误')]\n              }\n            })\n            return\n          }\n        }\n\n        this.props.appStore.toggleLogin(true, {username: values.username})\n\n        const {from} = this.props.location.state || {from: {pathname: '/'}}\n        this.props.history.push(from)\n      }\n    })\n  }\n  register = () => {\n    this.props.switchShowBox('register')\n    setTimeout(() => this.props.form.resetFields(), 500)\n  }\n\n  render () {\n    const {getFieldDecorator, getFieldError} = this.props.form\n    const {focusItem, code} = this.state\n    return (\n      <div className={this.props.className}>\n        <h3 className='title'>管理员登录</h3>\n        <Form onSubmit={this.loginSubmit}>\n          <Form.Item help={getFieldError('username') &&\n          <PromptBox info={getFieldError('username')} width={calculateWidth(getFieldError('username'))}/>}>\n            {getFieldDecorator('username', {\n              rules: [{required: true, message: '请输入用户名'}]\n            })(\n              <Input\n                onFocus={() => this.setState({focusItem: 0})}\n                onBlur={() => this.setState({focusItem: -1})}\n                maxLength={16}\n                placeholder='用户名'\n                addonBefore={<span className='iconfont icon-User' style={focusItem === 0 ? styles.focus : {}}/>}/>\n            )}\n          </Form.Item>\n          <Form.Item help={getFieldError('password') &&\n          <PromptBox info={getFieldError('password')} width={calculateWidth(getFieldError('password'))}/>}>\n            {getFieldDecorator('password', {\n              rules: [{required: true, message: '请输入密码'}]\n            })(\n              <Input\n                onFocus={() => this.setState({focusItem: 1})}\n                onBlur={() => this.setState({focusItem: -1})}\n                type='password'\n                maxLength={16}\n                placeholder='密码'\n                addonBefore={<span className='iconfont icon-suo1' style={focusItem === 1 ? styles.focus : {}}/>}/>\n            )}\n          </Form.Item>\n          <Form.Item help={getFieldError('verification') &&\n          <PromptBox info={getFieldError('verification')} width={calculateWidth(getFieldError('verification'))}/>}>\n            {getFieldDecorator('verification', {\n              validateFirst: true,\n              rules: [\n                {required: true, message: '请输入验证码'},\n                {\n                  validator: (rule, value, callback) => {\n                    if (value.length >= 4 && code.toUpperCase() !== value.toUpperCase()) {\n                      callback('验证码错误')\n                    }\n                    callback()\n                  }\n                }\n              ]\n            })(\n              <Row>\n                <Col span={15}>\n                  <Input\n                    onFocus={() => this.setState({focusItem: 2})}\n                    onBlur={() => this.setState({focusItem: -1})}\n                    maxLength={4}\n                    placeholder='验证码'\n                    addonBefore={<span className='iconfont icon-securityCode-b'\n                                       style={focusItem === 2 ? styles.focus : {}}/>}/>\n                </Col>\n                <Col span={9}>\n                  <canvas onClick={this.createCode} width=\"80\" height='39' ref={el => this.canvas = el}/>\n                </Col>\n              </Row>\n            )}\n          </Form.Item>\n          <div className='bottom'>\n            <input className='loginBtn' type=\"submit\" value='登录'/>\n            <span className='registerBtn' onClick={this.register}>注册</span>\n          </div>\n        </Form>\n        <div className='footer'>\n          <div>欢迎登陆后台管理系统</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst styles = {\n  focus: {\n    width: '20px',\n    opacity: 1\n  },\n}\n\nexport default LoginForm"]},"metadata":{},"sourceType":"module"}