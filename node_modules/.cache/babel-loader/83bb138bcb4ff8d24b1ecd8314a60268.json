{"ast":null,"code":"var _jsxFileName = \"/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Other/ChartDemo/index.js\";\nimport React from 'react';\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index';\nimport TypingCard from '../../../components/TypingCard';\nimport { Card, Row, Col, BackTop } from 'antd';\nimport { Chart, Axis, Geom, Tooltip, Coord, Label, Legend, G2 } from 'bizcharts';\nimport { View } from '@antv/data-set';\nconst data = [{\n  year: '1991',\n  value: 3\n}, {\n  year: '1992',\n  value: 4\n}, {\n  year: '1993',\n  value: 3.5\n}, {\n  year: '1994',\n  value: 5\n}, {\n  year: '1995',\n  value: 4.9\n}, {\n  year: '1996',\n  value: 6\n}, {\n  year: '1997',\n  value: 7\n}, {\n  year: '1998',\n  value: 9\n}, {\n  year: '1999',\n  value: 13\n}];\nconst cols = {\n  'value': {\n    min: 0\n  },\n  'year': {\n    range: [0, 1]\n  }\n};\nconst data2 = [{\n  year: '1951 年',\n  sales: 38\n}, {\n  year: '1952 年',\n  sales: 52\n}, {\n  year: '1956 年',\n  sales: 61\n}, {\n  year: '1957 年',\n  sales: 145\n}, {\n  year: '1958 年',\n  sales: 48\n}, {\n  year: '1959 年',\n  sales: 38\n}, {\n  year: '1960 年',\n  sales: 38\n}, {\n  year: '1962 年',\n  sales: 38\n}];\nconst cols2 = {\n  'sales': {\n    tickInterval: 20\n  }\n};\nconst data3 = [{\n  item: '事例一',\n  count: 40\n}, {\n  item: '事例二',\n  count: 21\n}, {\n  item: '事例三',\n  count: 17\n}, {\n  item: '事例四',\n  count: 13\n}, {\n  item: '事例五',\n  count: 9\n}];\nconst dv3 = new View();\ndv3.source(data3).transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n});\nconst cols3 = {\n  percent: {\n    formatter: val => {\n      val = val * 100 + '%';\n      return val;\n    }\n  }\n};\nconst colorMap = {\n  'Asia': G2.Global.colors[0],\n  'Americas': G2.Global.colors[1],\n  'Europe': G2.Global.colors[2],\n  'Oceania': G2.Global.colors[3]\n};\nconst cols4 = {\n  LifeExpectancy: {\n    alias: '人均寿命（年）'\n  },\n  Population: {\n    type: 'pow',\n    alias: '人口总数'\n  },\n  GDP: {\n    alias: '人均国内生产总值($)'\n  },\n  Country: {\n    alias: '国家/地区'\n  }\n};\nconst data4 = [{\n  'continent': 'Americas',\n  'Country': 'Argentina',\n  'LifeExpectancy': 75.32,\n  'GDP': 12779.37964,\n  'Population': 40301927\n}, {\n  'continent': 'Americas',\n  'Country': 'Brazil',\n  'LifeExpectancy': 72.39,\n  'GDP': 9065.800825,\n  'Population': 190010647\n}, {\n  'continent': 'Americas',\n  'Country': 'Canada',\n  'LifeExpectancy': 80.653,\n  'GDP': 36319.23501,\n  'Population': 33390141\n}, {\n  'continent': 'Americas',\n  'Country': 'Chile',\n  'LifeExpectancy': 78.553,\n  'GDP': 13171.63885,\n  'Population': 16284741\n}, {\n  'continent': 'Americas',\n  'Country': 'Colombia',\n  'LifeExpectancy': 72.889,\n  'GDP': 7006.580419,\n  'Population': 44227550\n}, {\n  'continent': 'Americas',\n  'Country': 'Costa Rica',\n  'LifeExpectancy': 78.782,\n  'GDP': 9645.06142,\n  'Population': 4133884\n}, {\n  'continent': 'Americas',\n  'Country': 'Cuba',\n  'LifeExpectancy': 78.273,\n  'GDP': 8948.102923,\n  'Population': 11416987\n}, {\n  'continent': 'Americas',\n  'Country': 'Dominican Republic',\n  'LifeExpectancy': 72.235,\n  'GDP': 6025.374752,\n  'Population': 9319622\n}, {\n  'continent': 'Americas',\n  'Country': 'Ecuador',\n  'LifeExpectancy': 74.994,\n  'GDP': 6873.262326,\n  'Population': 13755680\n}, {\n  'continent': 'Americas',\n  'Country': 'El Salvador',\n  'LifeExpectancy': 71.878,\n  'GDP': 5728.353514,\n  'Population': 6939688\n}, {\n  'continent': 'Americas',\n  'Country': 'Guatemala',\n  'LifeExpectancy': 70.259,\n  'GDP': 5186.050003,\n  'Population': 12572928\n}, {\n  'continent': 'Americas',\n  'Country': 'Honduras',\n  'LifeExpectancy': 70.198,\n  'GDP': 3548.330846,\n  'Population': 7483763\n}, {\n  'continent': 'Americas',\n  'Country': 'Jamaica',\n  'LifeExpectancy': 72.567,\n  'GDP': 7320.880262,\n  'Population': 2780132\n}, {\n  'continent': 'Americas',\n  'Country': 'Mexico',\n  'LifeExpectancy': 76.195,\n  'GDP': 11977.57496,\n  'Population': 108700891\n}, {\n  'continent': 'Americas',\n  'Country': 'Nicaragua',\n  'LifeExpectancy': 72.899,\n  'GDP': 2749.320965,\n  'Population': 5675356\n}, {\n  'continent': 'Americas',\n  'Country': 'Panama',\n  'LifeExpectancy': 75.537,\n  'GDP': 9809.185636,\n  'Population': 3242173\n}, {\n  'continent': 'Americas',\n  'Country': 'Paraguay',\n  'LifeExpectancy': 71.752,\n  'GDP': 4172.838464,\n  'Population': 6667147\n}, {\n  'continent': 'Americas',\n  'Country': 'Peru',\n  'LifeExpectancy': 71.421,\n  'GDP': 7408.905561,\n  'Population': 28674757\n}, {\n  'continent': 'Americas',\n  'Country': 'Puerto Rico',\n  'LifeExpectancy': 78.746,\n  'GDP': 19328.70901,\n  'Population': 3942491\n}, {\n  'continent': 'Americas',\n  'Country': 'Trinidad and Tobago',\n  'LifeExpectancy': 69.819,\n  'GDP': 18008.50924,\n  'Population': 1056608\n}, {\n  'continent': 'Americas',\n  'Country': 'United States',\n  'LifeExpectancy': 78.242,\n  'GDP': 42951.65309,\n  'Population': 301139947\n}, {\n  'continent': 'Americas',\n  'Country': 'Uruguay',\n  'LifeExpectancy': 76.384,\n  'GDP': 10611.46299,\n  'Population': 3447496\n}, {\n  'continent': 'Americas',\n  'Country': 'Venezuela',\n  'LifeExpectancy': 73.747,\n  'GDP': 11415.80569,\n  'Population': 26084662\n}, {\n  'continent': 'Asia',\n  'Country': 'China',\n  'LifeExpectancy': 72.961,\n  'GDP': 4959.114854,\n  'Population': 1318683096\n}, {\n  'continent': 'Asia',\n  'Country': 'Hong Kong, China',\n  'LifeExpectancy': 82.208,\n  'GDP': 39724.97867,\n  'Population': 6980412\n}, {\n  'continent': 'Asia',\n  'Country': 'Japan',\n  'LifeExpectancy': 82.603,\n  'GDP': 31656.06806,\n  'Population': 127467972\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Dem. Rep.',\n  'LifeExpectancy': 67.297,\n  'GDP': 1593.06548,\n  'Population': 23301725\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Rep.',\n  'LifeExpectancy': 78.623,\n  'GDP': 23348.13973,\n  'Population': 49044790\n}, {\n  'continent': 'Europe',\n  'Country': 'Albania',\n  'LifeExpectancy': 76.423,\n  'GDP': 5937.029526,\n  'Population': 3600523\n}, {\n  'continent': 'Europe',\n  'Country': 'Austria',\n  'LifeExpectancy': 79.829,\n  'GDP': 36126.4927,\n  'Population': 8199783\n}, {\n  'continent': 'Europe',\n  'Country': 'Belgium',\n  'LifeExpectancy': 79.441,\n  'GDP': 33692.60508,\n  'Population': 10392226\n}, {\n  'continent': 'Europe',\n  'Country': 'Bosnia and Herzegovina',\n  'LifeExpectancy': 74.852,\n  'GDP': 7446.298803,\n  'Population': 4552198\n}, {\n  'continent': 'Europe',\n  'Country': 'Bulgaria',\n  'LifeExpectancy': 73.005,\n  'GDP': 10680.79282,\n  'Population': 7322858\n}, {\n  'continent': 'Europe',\n  'Country': 'Croatia',\n  'LifeExpectancy': 75.748,\n  'GDP': 14619.22272,\n  'Population': 4493312\n}, {\n  'continent': 'Europe',\n  'Country': 'Czech Republic',\n  'LifeExpectancy': 76.486,\n  'GDP': 22833.30851,\n  'Population': 10228744\n}, {\n  'continent': 'Europe',\n  'Country': 'Denmark',\n  'LifeExpectancy': 78.332,\n  'GDP': 35278.41874,\n  'Population': 5468120\n}, {\n  'continent': 'Europe',\n  'Country': 'Finland',\n  'LifeExpectancy': 79.313,\n  'GDP': 33207.0844,\n  'Population': 5238460\n}, {\n  'continent': 'Europe',\n  'Country': 'France',\n  'LifeExpectancy': 80.657,\n  'GDP': 30470.0167,\n  'Population': 61083916\n}, {\n  'continent': 'Europe',\n  'Country': 'Germany',\n  'LifeExpectancy': 79.406,\n  'GDP': 32170.37442,\n  'Population': 82400996\n}, {\n  'continent': 'Europe',\n  'Country': 'Greece',\n  'LifeExpectancy': 79.483,\n  'GDP': 27538.41188,\n  'Population': 10706290\n}, {\n  'continent': 'Europe',\n  'Country': 'Hungary',\n  'LifeExpectancy': 73.338,\n  'GDP': 18008.94444,\n  'Population': 9956108\n}, {\n  'continent': 'Europe',\n  'Country': 'Iceland',\n  'LifeExpectancy': 81.757,\n  'GDP': 36180.78919,\n  'Population': 301931\n}, {\n  'continent': 'Europe',\n  'Country': 'Ireland',\n  'LifeExpectancy': 78.885,\n  'GDP': 40675.99635,\n  'Population': 4109086\n}, {\n  'continent': 'Europe',\n  'Country': 'Italy',\n  'LifeExpectancy': 80.546,\n  'GDP': 28569.7197,\n  'Population': 58147733\n}, {\n  'continent': 'Europe',\n  'Country': 'Montenegro',\n  'LifeExpectancy': 74.543,\n  'GDP': 9253.896111,\n  'Population': 684736\n}, {\n  'continent': 'Europe',\n  'Country': 'Netherlands',\n  'LifeExpectancy': 79.762,\n  'GDP': 36797.93332,\n  'Population': 16570613\n}, {\n  'continent': 'Europe',\n  'Country': 'Norway',\n  'LifeExpectancy': 80.196,\n  'GDP': 49357.19017,\n  'Population': 4627926\n}, {\n  'continent': 'Europe',\n  'Country': 'Poland',\n  'LifeExpectancy': 75.563,\n  'GDP': 15389.92468,\n  'Population': 38518241\n}, {\n  'continent': 'Europe',\n  'Country': 'Portugal',\n  'LifeExpectancy': 78.098,\n  'GDP': 20509.64777,\n  'Population': 10642836\n}, {\n  'continent': 'Europe',\n  'Country': 'Romania',\n  'LifeExpectancy': 72.476,\n  'GDP': 10808.47561,\n  'Population': 22276056\n}, {\n  'continent': 'Europe',\n  'Country': 'Serbia',\n  'LifeExpectancy': 74.002,\n  'GDP': 9786.534714,\n  'Population': 10150265\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovak Republic',\n  'LifeExpectancy': 74.663,\n  'GDP': 18678.31435,\n  'Population': 5447502\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovenia',\n  'LifeExpectancy': 77.926,\n  'GDP': 25768.25759,\n  'Population': 2009245\n}, {\n  'continent': 'Europe',\n  'Country': 'Spain',\n  'LifeExpectancy': 80.941,\n  'GDP': 28821.0637,\n  'Population': 40448191\n}, {\n  'continent': 'Europe',\n  'Country': 'Sweden',\n  'LifeExpectancy': 80.884,\n  'GDP': 33859.74835,\n  'Population': 9031088\n}, {\n  'continent': 'Europe',\n  'Country': 'Switzerland',\n  'LifeExpectancy': 81.701,\n  'GDP': 37506.41907,\n  'Population': 7554661\n}, {\n  'continent': 'Europe',\n  'Country': 'Turkey',\n  'LifeExpectancy': 71.777,\n  'GDP': 8458.276384,\n  'Population': 71158647\n}, {\n  'continent': 'Europe',\n  'Country': 'United Kingdom',\n  'LifeExpectancy': 79.425,\n  'GDP': 33203.26128,\n  'Population': 60776238\n}, {\n  'continent': 'Oceania',\n  'Country': 'Australia',\n  'LifeExpectancy': 81.235,\n  'GDP': 34435.36744,\n  'Population': 20434176\n}, {\n  'continent': 'Oceania',\n  'Country': 'New Zealand',\n  'LifeExpectancy': 80.204,\n  'GDP': 25185.00911,\n  'Population': 4115771\n}];\n\nclass ChartDemo extends React.Component {\n  render() {\n    const cardContent = `此页面用到的图表插件是<a href=\"https://github.com/alibaba/BizCharts\">bizcharts@^3.1.10</a>`;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomBreadcrumb, {\n      arr: ['其它', '图表'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TypingCard, {\n      title: \"\\u56FE\\u8868\",\n      source: cardContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      gutter: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"\\u57FA\\u7840\\u6298\\u7EBF\\u56FE\",\n      bordered: false,\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 400,\n      data: data,\n      scale: cols,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Axis, {\n      name: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      crosshairs: {\n        type: 'y'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"line\",\n      position: \"year*value\",\n      size: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"point\",\n      position: \"year*value\",\n      size: 4,\n      shape: 'circle',\n      style: {\n        stroke: '#fff',\n        lineWidth: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"\\u57FA\\u7840\\u67F1\\u72B6\\u56FE\",\n      bordered: false,\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 400,\n      data: data2,\n      scale: cols2,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Axis, {\n      name: \"year\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      crosshairs: {\n        type: 'y'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"interval\",\n      position: \"year*sales\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(Row, {\n      gutter: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"\\u57FA\\u7840\\u997C\\u56FE\",\n      bordered: false,\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 400,\n      data: dv3,\n      scale: cols3,\n      padding: [80, 100, 80, 80],\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Coord, {\n      type: \"theta\",\n      radius: 0.75,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"percent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      position: \"right\",\n      offsetY: -80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      showTitle: false,\n      itemTpl: \"<li><span style=\\\"background-color:{color};\\\" class=\\\"g2-tooltip-marker\\\"></span>{name}: {value}</li>\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"intervalStack\",\n      position: \"percent\",\n      color: \"item\",\n      tooltip: ['item*percent', (item, percent) => {\n        percent = percent * 100 + '%';\n        return {\n          name: item,\n          value: percent\n        };\n      }],\n      style: {\n        lineWidth: 1,\n        stroke: '#fff'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      content: \"percent\",\n      formatter: (val, item) => {\n        return item.point.item + ': ' + val;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      span: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: \"\\u6C14\\u6CE1\\u56FE\",\n      bordered: false,\n      className: \"card-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      height: 400,\n      data: data4,\n      scale: cols4,\n      forceFit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      showTitle: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"GDP\",\n      label: {\n        formatter: value => {\n          return (value / 1000).toFixed(0) + 'k';\n        } // 格式化坐标轴的显示\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Axis, {\n      name: \"LifeExpectancy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Legend, {\n      reversed: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Geom, {\n      type: \"point\",\n      position: \"GDP*LifeExpectancy\",\n      color: ['continent', val => {\n        return colorMap[val];\n      }],\n      tooltip: \"Country*Population*GDP*LifeExpectancy\",\n      opacity: 0.65,\n      shape: \"circle\",\n      size: ['Population', [4, 65]],\n      style: ['continent', {\n        lineWidth: 1,\n        strokeOpacity: 1,\n        fillOpacity: 0.3,\n        opacity: 0.65,\n        stroke: val => {\n          return colorMap[val];\n        }\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 17\n      }\n    }))))), /*#__PURE__*/React.createElement(BackTop, {\n      visibilityHeight: 200,\n      style: {\n        right: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default ChartDemo;","map":{"version":3,"sources":["/Users/loki/feature1/Handy-Booking-Management-System/src/routes/Other/ChartDemo/index.js"],"names":["React","CustomBreadcrumb","TypingCard","Card","Row","Col","BackTop","Chart","Axis","Geom","Tooltip","Coord","Label","Legend","G2","View","data","year","value","cols","min","range","data2","sales","cols2","tickInterval","data3","item","count","dv3","source","transform","type","field","dimension","as","cols3","percent","formatter","val","colorMap","Global","colors","cols4","LifeExpectancy","alias","Population","GDP","Country","data4","ChartDemo","Component","render","cardContent","stroke","lineWidth","name","point","toFixed","strokeOpacity","fillOpacity","opacity","right"],"mappings":"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","sourcesContent":["import React from 'react'\nimport CustomBreadcrumb from '../../../components/CustomBreadcrumb/index'\nimport TypingCard from '../../../components/TypingCard'\nimport { Card, Row, Col,BackTop } from 'antd'\nimport { Chart, Axis, Geom, Tooltip, Coord, Label, Legend, G2 } from 'bizcharts'\nimport { View } from '@antv/data-set'\n\nconst data = [\n  {year: '1991', value: 3},\n  {year: '1992', value: 4},\n  {year: '1993', value: 3.5},\n  {year: '1994', value: 5},\n  {year: '1995', value: 4.9},\n  {year: '1996', value: 6},\n  {year: '1997', value: 7},\n  {year: '1998', value: 9},\n  {year: '1999', value: 13}\n]\nconst cols = {\n  'value': {min: 0},\n  'year': {range: [0, 1]}\n}\n\nconst data2 = [\n  {year: '1951 年', sales: 38},\n  {year: '1952 年', sales: 52},\n  {year: '1956 年', sales: 61},\n  {year: '1957 年', sales: 145},\n  {year: '1958 年', sales: 48},\n  {year: '1959 年', sales: 38},\n  {year: '1960 年', sales: 38},\n  {year: '1962 年', sales: 38},\n]\nconst cols2 = {\n  'sales': {tickInterval: 20},\n}\n\nconst data3 = [\n  {item: '事例一', count: 40},\n  {item: '事例二', count: 21},\n  {item: '事例三', count: 17},\n  {item: '事例四', count: 13},\n  {item: '事例五', count: 9}\n]\nconst dv3 = new View()\ndv3.source(data3).transform({\n  type: 'percent',\n  field: 'count',\n  dimension: 'item',\n  as: 'percent'\n})\nconst cols3 = {\n  percent: {\n    formatter: val => {\n      val = (val * 100) + '%'\n      return val\n    }\n  }\n}\n\nconst colorMap = {\n  'Asia': G2.Global.colors[0],\n  'Americas': G2.Global.colors[1],\n  'Europe': G2.Global.colors[2],\n  'Oceania': G2.Global.colors[3]\n}\nconst cols4 = {\n  LifeExpectancy: {\n    alias: '人均寿命（年）'\n  },\n  Population: {\n    type: 'pow',\n    alias: '人口总数'\n  },\n  GDP: {\n    alias: '人均国内生产总值($)'\n  },\n  Country: {\n    alias: '国家/地区'\n  }\n}\nconst data4 = [\n  {\n  'continent': 'Americas',\n  'Country': 'Argentina',\n  'LifeExpectancy': 75.32,\n  'GDP': 12779.37964,\n  'Population': 40301927\n}, {\n  'continent': 'Americas',\n  'Country': 'Brazil',\n  'LifeExpectancy': 72.39,\n  'GDP': 9065.800825,\n  'Population': 190010647\n}, {\n  'continent': 'Americas',\n  'Country': 'Canada',\n  'LifeExpectancy': 80.653,\n  'GDP': 36319.23501,\n  'Population': 33390141\n}, {\n  'continent': 'Americas',\n  'Country': 'Chile',\n  'LifeExpectancy': 78.553,\n  'GDP': 13171.63885,\n  'Population': 16284741\n}, {\n  'continent': 'Americas',\n  'Country': 'Colombia',\n  'LifeExpectancy': 72.889,\n  'GDP': 7006.580419,\n  'Population': 44227550\n}, {\n  'continent': 'Americas',\n  'Country': 'Costa Rica',\n  'LifeExpectancy': 78.782,\n  'GDP': 9645.06142,\n  'Population': 4133884\n}, {\n  'continent': 'Americas',\n  'Country': 'Cuba',\n  'LifeExpectancy': 78.273,\n  'GDP': 8948.102923,\n  'Population': 11416987\n}, {\n  'continent': 'Americas',\n  'Country': 'Dominican Republic',\n  'LifeExpectancy': 72.235,\n  'GDP': 6025.374752,\n  'Population': 9319622\n}, {\n  'continent': 'Americas',\n  'Country': 'Ecuador',\n  'LifeExpectancy': 74.994,\n  'GDP': 6873.262326,\n  'Population': 13755680\n}, {\n  'continent': 'Americas',\n  'Country': 'El Salvador',\n  'LifeExpectancy': 71.878,\n  'GDP': 5728.353514,\n  'Population': 6939688\n}, {\n  'continent': 'Americas',\n  'Country': 'Guatemala',\n  'LifeExpectancy': 70.259,\n  'GDP': 5186.050003,\n  'Population': 12572928\n}, {\n  'continent': 'Americas',\n  'Country': 'Honduras',\n  'LifeExpectancy': 70.198,\n  'GDP': 3548.330846,\n  'Population': 7483763\n}, {\n  'continent': 'Americas',\n  'Country': 'Jamaica',\n  'LifeExpectancy': 72.567,\n  'GDP': 7320.880262,\n  'Population': 2780132\n}, {\n  'continent': 'Americas',\n  'Country': 'Mexico',\n  'LifeExpectancy': 76.195,\n  'GDP': 11977.57496,\n  'Population': 108700891\n}, {\n  'continent': 'Americas',\n  'Country': 'Nicaragua',\n  'LifeExpectancy': 72.899,\n  'GDP': 2749.320965,\n  'Population': 5675356\n}, {\n  'continent': 'Americas',\n  'Country': 'Panama',\n  'LifeExpectancy': 75.537,\n  'GDP': 9809.185636,\n  'Population': 3242173\n}, {\n  'continent': 'Americas',\n  'Country': 'Paraguay',\n  'LifeExpectancy': 71.752,\n  'GDP': 4172.838464,\n  'Population': 6667147\n}, {\n  'continent': 'Americas',\n  'Country': 'Peru',\n  'LifeExpectancy': 71.421,\n  'GDP': 7408.905561,\n  'Population': 28674757\n}, {\n  'continent': 'Americas',\n  'Country': 'Puerto Rico',\n  'LifeExpectancy': 78.746,\n  'GDP': 19328.70901,\n  'Population': 3942491\n}, {\n  'continent': 'Americas',\n  'Country': 'Trinidad and Tobago',\n  'LifeExpectancy': 69.819,\n  'GDP': 18008.50924,\n  'Population': 1056608\n}, {\n  'continent': 'Americas',\n  'Country': 'United States',\n  'LifeExpectancy': 78.242,\n  'GDP': 42951.65309,\n  'Population': 301139947\n}, {\n  'continent': 'Americas',\n  'Country': 'Uruguay',\n  'LifeExpectancy': 76.384,\n  'GDP': 10611.46299,\n  'Population': 3447496\n}, {\n  'continent': 'Americas',\n  'Country': 'Venezuela',\n  'LifeExpectancy': 73.747,\n  'GDP': 11415.80569,\n  'Population': 26084662\n}, {\n  'continent': 'Asia',\n  'Country': 'China',\n  'LifeExpectancy': 72.961,\n  'GDP': 4959.114854,\n  'Population': 1318683096\n}, {\n  'continent': 'Asia',\n  'Country': 'Hong Kong, China',\n  'LifeExpectancy': 82.208,\n  'GDP': 39724.97867,\n  'Population': 6980412\n}, {\n  'continent': 'Asia',\n  'Country': 'Japan',\n  'LifeExpectancy': 82.603,\n  'GDP': 31656.06806,\n  'Population': 127467972\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Dem. Rep.',\n  'LifeExpectancy': 67.297,\n  'GDP': 1593.06548,\n  'Population': 23301725\n}, {\n  'continent': 'Asia',\n  'Country': 'Korea, Rep.',\n  'LifeExpectancy': 78.623,\n  'GDP': 23348.13973,\n  'Population': 49044790\n}, {\n  'continent': 'Europe',\n  'Country': 'Albania',\n  'LifeExpectancy': 76.423,\n  'GDP': 5937.029526,\n  'Population': 3600523\n}, {\n  'continent': 'Europe',\n  'Country': 'Austria',\n  'LifeExpectancy': 79.829,\n  'GDP': 36126.4927,\n  'Population': 8199783\n}, {\n  'continent': 'Europe',\n  'Country': 'Belgium',\n  'LifeExpectancy': 79.441,\n  'GDP': 33692.60508,\n  'Population': 10392226\n}, {\n  'continent': 'Europe',\n  'Country': 'Bosnia and Herzegovina',\n  'LifeExpectancy': 74.852,\n  'GDP': 7446.298803,\n  'Population': 4552198\n}, {\n  'continent': 'Europe',\n  'Country': 'Bulgaria',\n  'LifeExpectancy': 73.005,\n  'GDP': 10680.79282,\n  'Population': 7322858\n}, {\n  'continent': 'Europe',\n  'Country': 'Croatia',\n  'LifeExpectancy': 75.748,\n  'GDP': 14619.22272,\n  'Population': 4493312\n}, {\n  'continent': 'Europe',\n  'Country': 'Czech Republic',\n  'LifeExpectancy': 76.486,\n  'GDP': 22833.30851,\n  'Population': 10228744\n}, {\n  'continent': 'Europe',\n  'Country': 'Denmark',\n  'LifeExpectancy': 78.332,\n  'GDP': 35278.41874,\n  'Population': 5468120\n}, {\n  'continent': 'Europe',\n  'Country': 'Finland',\n  'LifeExpectancy': 79.313,\n  'GDP': 33207.0844,\n  'Population': 5238460\n}, {\n  'continent': 'Europe',\n  'Country': 'France',\n  'LifeExpectancy': 80.657,\n  'GDP': 30470.0167,\n  'Population': 61083916\n}, {\n  'continent': 'Europe',\n  'Country': 'Germany',\n  'LifeExpectancy': 79.406,\n  'GDP': 32170.37442,\n  'Population': 82400996\n}, {\n  'continent': 'Europe',\n  'Country': 'Greece',\n  'LifeExpectancy': 79.483,\n  'GDP': 27538.41188,\n  'Population': 10706290\n}, {\n  'continent': 'Europe',\n  'Country': 'Hungary',\n  'LifeExpectancy': 73.338,\n  'GDP': 18008.94444,\n  'Population': 9956108\n}, {\n  'continent': 'Europe',\n  'Country': 'Iceland',\n  'LifeExpectancy': 81.757,\n  'GDP': 36180.78919,\n  'Population': 301931\n}, {\n  'continent': 'Europe',\n  'Country': 'Ireland',\n  'LifeExpectancy': 78.885,\n  'GDP': 40675.99635,\n  'Population': 4109086\n}, {\n  'continent': 'Europe',\n  'Country': 'Italy',\n  'LifeExpectancy': 80.546,\n  'GDP': 28569.7197,\n  'Population': 58147733\n}, {\n  'continent': 'Europe',\n  'Country': 'Montenegro',\n  'LifeExpectancy': 74.543,\n  'GDP': 9253.896111,\n  'Population': 684736\n}, {\n  'continent': 'Europe',\n  'Country': 'Netherlands',\n  'LifeExpectancy': 79.762,\n  'GDP': 36797.93332,\n  'Population': 16570613\n}, {\n  'continent': 'Europe',\n  'Country': 'Norway',\n  'LifeExpectancy': 80.196,\n  'GDP': 49357.19017,\n  'Population': 4627926\n}, {\n  'continent': 'Europe',\n  'Country': 'Poland',\n  'LifeExpectancy': 75.563,\n  'GDP': 15389.92468,\n  'Population': 38518241\n}, {\n  'continent': 'Europe',\n  'Country': 'Portugal',\n  'LifeExpectancy': 78.098,\n  'GDP': 20509.64777,\n  'Population': 10642836\n}, {\n  'continent': 'Europe',\n  'Country': 'Romania',\n  'LifeExpectancy': 72.476,\n  'GDP': 10808.47561,\n  'Population': 22276056\n}, {\n  'continent': 'Europe',\n  'Country': 'Serbia',\n  'LifeExpectancy': 74.002,\n  'GDP': 9786.534714,\n  'Population': 10150265\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovak Republic',\n  'LifeExpectancy': 74.663,\n  'GDP': 18678.31435,\n  'Population': 5447502\n}, {\n  'continent': 'Europe',\n  'Country': 'Slovenia',\n  'LifeExpectancy': 77.926,\n  'GDP': 25768.25759,\n  'Population': 2009245\n}, {\n  'continent': 'Europe',\n  'Country': 'Spain',\n  'LifeExpectancy': 80.941,\n  'GDP': 28821.0637,\n  'Population': 40448191\n}, {\n  'continent': 'Europe',\n  'Country': 'Sweden',\n  'LifeExpectancy': 80.884,\n  'GDP': 33859.74835,\n  'Population': 9031088\n}, {\n  'continent': 'Europe',\n  'Country': 'Switzerland',\n  'LifeExpectancy': 81.701,\n  'GDP': 37506.41907,\n  'Population': 7554661\n}, {\n  'continent': 'Europe',\n  'Country': 'Turkey',\n  'LifeExpectancy': 71.777,\n  'GDP': 8458.276384,\n  'Population': 71158647\n}, {\n  'continent': 'Europe',\n  'Country': 'United Kingdom',\n  'LifeExpectancy': 79.425,\n  'GDP': 33203.26128,\n  'Population': 60776238\n}, {\n  'continent': 'Oceania',\n  'Country': 'Australia',\n  'LifeExpectancy': 81.235,\n  'GDP': 34435.36744,\n  'Population': 20434176\n}, {\n  'continent': 'Oceania',\n  'Country': 'New Zealand',\n  'LifeExpectancy': 80.204,\n  'GDP': 25185.00911,\n  'Population': 4115771\n}]\n\nclass ChartDemo extends React.Component {\n  render () {\n    const cardContent = `此页面用到的图表插件是<a href=\"https://github.com/alibaba/BizCharts\">bizcharts@^3.1.10</a>`\n    return (\n      <div>\n        <CustomBreadcrumb arr={['其它', '图表']}/>\n        <TypingCard title='图表' source={cardContent}/>\n        <Row gutter={10}>\n          <Col span={12}>\n            <Card title='基础折线图' bordered={false} className='card-item'>\n              <Chart height={400} data={data} scale={cols} forceFit>\n                <Axis name=\"year\"/>\n                <Axis name=\"value\"/>\n                <Tooltip crosshairs={{type: 'y'}}/>\n                <Geom type=\"line\" position=\"year*value\" size={2}/>\n                <Geom type='point' position=\"year*value\" size={4} shape={'circle'}\n                      style={{stroke: '#fff', lineWidth: 1}}/>\n              </Chart>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='基础柱状图' bordered={false} className='card-item'>\n              <Chart height={400} data={data2} scale={cols2} forceFit>\n                <Axis name=\"year\"/>\n                <Axis name=\"sales\"/>\n                <Tooltip crosshairs={{type: 'y'}}/>\n                <Geom type=\"interval\" position=\"year*sales\"/>\n              </Chart>\n            </Card>\n          </Col>\n        </Row>\n        <Row gutter={10}>\n          <Col span={12}>\n            <Card title='基础饼图' bordered={false} className='card-item'>\n              <Chart height={400} data={dv3} scale={cols3} padding={[80, 100, 80, 80]} forceFit>\n                <Coord type='theta' radius={0.75}/>\n                <Axis name=\"percent\"/>\n                {/*<Legend position='right' offsetY={-80} offsetX={-100}/>*/}\n                <Legend position='right' offsetY={-80}/>\n                <Tooltip\n                  showTitle={false}\n                  itemTpl='<li><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value}</li>'\n                />\n                <Geom\n                  type=\"intervalStack\"\n                  position=\"percent\"\n                  color='item'\n                  tooltip={['item*percent', (item, percent) => {\n                    percent = percent * 100 + '%'\n                    return {\n                      name: item,\n                      value: percent\n                    }\n                  }]}\n                  style={{lineWidth: 1, stroke: '#fff'}}\n                >\n                  <Label content='percent' formatter={(val, item) => {\n                    return item.point.item + ': ' + val\n                  }}/>\n                </Geom>\n              </Chart>\n            </Card>\n          </Col>\n          <Col span={12}>\n            <Card title='气泡图' bordered={false} className='card-item'>\n              <Chart height={400} data={data4} scale={cols4} forceFit>\n                <Tooltip showTitle={false}/>\n                <Axis name='GDP' label={{\n                  formatter: (value) => {\n                    return (value / 1000).toFixed(0) + 'k'\n                  } // 格式化坐标轴的显示\n                }}/>\n                <Axis name='LifeExpectancy'/>\n                <Legend reversed/>\n                <Geom type='point' position=\"GDP*LifeExpectancy\" color={['continent', val => {\n                  return colorMap[val]\n                }]} tooltip='Country*Population*GDP*LifeExpectancy' opacity={0.65} shape=\"circle\"\n                      size={['Population', [4, 65]]} style={['continent', {\n                  lineWidth: 1,\n                  strokeOpacity: 1,\n                  fillOpacity: 0.3,\n                  opacity: 0.65,\n                  stroke: val => {\n                    return colorMap[val]\n                  }\n                }]}/>\n              </Chart>\n            </Card>\n          </Col>\n        </Row>\n        <BackTop visibilityHeight={200} style={{right: 50}}/>\n      </div>\n    )\n  }\n}\n\nexport default ChartDemo"]},"metadata":{},"sourceType":"module"}